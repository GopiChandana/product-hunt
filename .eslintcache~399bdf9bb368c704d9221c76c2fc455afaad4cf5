[{"E:\\product-hunt\\src\\index.js":"1","E:\\product-hunt\\src\\App.js":"2","E:\\product-hunt\\src\\Redux\\store.js":"3","E:\\product-hunt\\src\\Routes\\Routes.js":"4","E:\\product-hunt\\src\\Redux\\products\\productsReducer.js":"5","E:\\product-hunt\\src\\Redux\\auth\\authReducer.js":"6","E:\\product-hunt\\src\\Redux\\ask\\askReducer.js":"7","E:\\product-hunt\\src\\Components\\Navbar\\Navbar.jsx":"8","E:\\product-hunt\\src\\Redux\\jobs\\reducer.js":"9","E:\\product-hunt\\src\\Redux\\products\\actionTypes.js":"10","E:\\product-hunt\\src\\Redux\\auth\\actionTypes.js":"11","E:\\product-hunt\\src\\Redux\\ask\\actionTypes.js":"12","E:\\product-hunt\\src\\Components\\Deals\\Deals.jsx":"13","E:\\product-hunt\\src\\Components\\Product\\Product.jsx":"14","E:\\product-hunt\\src\\Components\\Mentors\\Mentors.jsx":"15","E:\\product-hunt\\src\\Components\\Ask\\AskPage.jsx":"16","E:\\product-hunt\\src\\Components\\Product\\ProductModal.jsx":"17","E:\\product-hunt\\src\\Components\\Ask\\Ask.jsx":"18","E:\\product-hunt\\src\\Components\\Discussions\\Discussions.jsx":"19","E:\\product-hunt\\src\\Redux\\auth\\actions.js":"20","E:\\product-hunt\\src\\Components\\Jobs\\Jobs.jsx":"21","E:\\product-hunt\\src\\Redux\\jobs\\actionTypes.js":"22","E:\\product-hunt\\src\\Components\\Auth\\AuthModal.jsx":"23","E:\\product-hunt\\src\\Redux\\products\\actions.js":"24","E:\\product-hunt\\src\\Redux\\jobs\\action.js":"25","E:\\product-hunt\\src\\Components\\Product\\ProductCard.jsx":"26","E:\\product-hunt\\src\\Components\\Ask\\AskHeader.jsx":"27","E:\\product-hunt\\src\\Components\\Product\\SideCard.jsx":"28","E:\\product-hunt\\src\\Components\\Ask\\ProductSidebar.jsx":"29","E:\\product-hunt\\src\\Components\\Ask\\RightSidebar.jsx":"30","E:\\product-hunt\\src\\Components\\Ask\\Recommendation.jsx":"31","E:\\product-hunt\\src\\Components\\Ask\\LeftSidebar.jsx":"32","E:\\product-hunt\\src\\Components\\Ask\\Content.jsx":"33","E:\\product-hunt\\src\\Redux\\ask\\actions.js":"34","E:\\product-hunt\\src\\Components\\Ask\\QuestionCard.jsx":"35","E:\\product-hunt\\src\\AuthContextProvider.js":"36","E:\\product-hunt\\src\\Redux\\operations\\operationsReducer.js":"37","E:\\product-hunt\\src\\Redux\\operations\\actionTypes.js":"38","E:\\product-hunt\\src\\Redux\\operations\\actions.js":"39","E:\\product-hunt\\src\\Components\\Product\\CommentsSection.jsx":"40","E:\\product-hunt\\src\\Components\\MyJobs\\MyJobs.jsx":"41","E:\\product-hunt\\src\\Components\\Ask\\Comments.jsx":"42","E:\\product-hunt\\src\\Components\\Ask\\SingleComment.jsx":"43"},{"size":522,"mtime":1612464062305,"results":"44","hashOfConfig":"45"},{"size":305,"mtime":1612292152790,"results":"46","hashOfConfig":"45"},{"size":891,"mtime":1612445430609,"results":"47","hashOfConfig":"45"},{"size":1410,"mtime":1612464167259,"results":"48","hashOfConfig":"45"},{"size":3580,"mtime":1612445430609,"results":"49","hashOfConfig":"45"},{"size":1062,"mtime":1612440874790,"results":"50","hashOfConfig":"45"},{"size":1508,"mtime":1612464152664,"results":"51","hashOfConfig":"45"},{"size":3714,"mtime":1612465343030,"results":"52","hashOfConfig":"45"},{"size":3934,"mtime":1612464152665,"results":"53","hashOfConfig":"45"},{"size":1177,"mtime":1612445430608,"results":"54","hashOfConfig":"45"},{"size":290,"mtime":1612346478275,"results":"55","hashOfConfig":"45"},{"size":948,"mtime":1612464152663,"results":"56","hashOfConfig":"45"},{"size":2551,"mtime":1612447046836,"results":"57","hashOfConfig":"45"},{"size":9107,"mtime":1612464813089,"results":"58","hashOfConfig":"45"},{"size":18916,"mtime":1612292152796,"results":"59","hashOfConfig":"45"},{"size":2362,"mtime":1612464152655,"results":"60","hashOfConfig":"45"},{"size":15392,"mtime":1612464815912,"results":"61","hashOfConfig":"45"},{"size":564,"mtime":1612445497669,"results":"62","hashOfConfig":"45"},{"size":7187,"mtime":1612445430600,"results":"63","hashOfConfig":"45"},{"size":1408,"mtime":1612445430606,"results":"64","hashOfConfig":"45"},{"size":6412,"mtime":1612457714107,"results":"65","hashOfConfig":"45"},{"size":1202,"mtime":1612454936988,"results":"66","hashOfConfig":"45"},{"size":2690,"mtime":1612464152659,"results":"67","hashOfConfig":"45"},{"size":4578,"mtime":1612464849985,"results":"68","hashOfConfig":"45"},{"size":9368,"mtime":1612440874791,"results":"69","hashOfConfig":"45"},{"size":4347,"mtime":1612464811240,"results":"70","hashOfConfig":"45"},{"size":317,"mtime":1612445499551,"results":"71","hashOfConfig":"45"},{"size":1094,"mtime":1612445430605,"results":"72","hashOfConfig":"45"},{"size":2936,"mtime":1612464606984,"results":"73","hashOfConfig":"45"},{"size":2176,"mtime":1612440874785,"results":"74","hashOfConfig":"45"},{"size":1163,"mtime":1612464152658,"results":"75","hashOfConfig":"45"},{"size":592,"mtime":1612440874782,"results":"76","hashOfConfig":"45"},{"size":1015,"mtime":1612464813891,"results":"77","hashOfConfig":"45"},{"size":3457,"mtime":1612464152664,"results":"78","hashOfConfig":"45"},{"size":850,"mtime":1612464152657,"results":"79","hashOfConfig":"45"},{"size":348,"mtime":1612445430597,"results":"80","hashOfConfig":"45"},{"size":995,"mtime":1612445430607,"results":"81","hashOfConfig":"45"},{"size":228,"mtime":1612445430607,"results":"82","hashOfConfig":"45"},{"size":2775,"mtime":1612445430607,"results":"83","hashOfConfig":"45"},{"size":1401,"mtime":1612445430602,"results":"84","hashOfConfig":"45"},{"size":251,"mtime":1612464152662,"results":"85","hashOfConfig":"45"},{"size":1894,"mtime":1612464814935,"results":"86","hashOfConfig":"45"},{"size":445,"mtime":1612464152659,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"giv3r3",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"90"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"90"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"90"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},"E:\\product-hunt\\src\\index.js",[],["194","195"],"E:\\product-hunt\\src\\App.js",[],"E:\\product-hunt\\src\\Redux\\store.js",[],"E:\\product-hunt\\src\\Routes\\Routes.js",[],"E:\\product-hunt\\src\\Redux\\products\\productsReducer.js",[],"E:\\product-hunt\\src\\Redux\\auth\\authReducer.js",[],"E:\\product-hunt\\src\\Redux\\ask\\askReducer.js",[],"E:\\product-hunt\\src\\Components\\Navbar\\Navbar.jsx",["196"],"E:\\product-hunt\\src\\Redux\\jobs\\reducer.js",[],"E:\\product-hunt\\src\\Redux\\products\\actionTypes.js",[],"E:\\product-hunt\\src\\Redux\\auth\\actionTypes.js",[],"E:\\product-hunt\\src\\Redux\\ask\\actionTypes.js",[],"E:\\product-hunt\\src\\Components\\Deals\\Deals.jsx",["197"],"import React from \"react\";\r\nimport styles from \"./Deals.module.css\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Deals = () => {\r\n  const [product, setProduct] = React.useState({\r\n    name: \"Founder Club Membership\",\r\n    price: 799,\r\n  });\r\n  const history = useHistory();\r\n  const makePayment = (token) => {\r\n    const body = {\r\n      token,\r\n      product,\r\n    };\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    return fetch(`http://localhost:8282/payment`, {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((response) => {\r\n        console.log(\"RESPONSE \", response);\r\n        const { status } = response;\r\n        alert(\"Congrtulation!! You are now a FOUNDER CLUB MEMBER\");\r\n        console.log(\"STATUS \", status);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  return (\r\n    <div className={styles.Deals}>\r\n      <div className={styles.Deals__banner}>\r\n        <div className={styles.Deals__bannerEmoji}>✨</div>\r\n        <div className={styles.Deals__bannerHeader}>\r\n          <h1>Founder Club</h1>\r\n          <p>\r\n            Your access to big savings on tools that help kick start your\r\n            business. Join now for access to >$100,000 in savings for only$60/mo\r\n          </p>\r\n        </div>\r\n        <div className={styles.Deals__bannerJoin}>\r\n          <StripeCheckout\r\n            stripeKey=\"pk_test_yUCJVPDmx1rlsgHAGtdqGkzw\"\r\n            token={makePayment}\r\n            name={`Founder Club @$${product.price}`}\r\n            amount={product.price * 100}\r\n            // shippingAddress\r\n            // billingAddress\r\n          >\r\n            <button>JOIN FOUNDER CLUB</button>\r\n          </StripeCheckout>\r\n          {/* <button>JOIN FOUNDER CLUB</button> */}\r\n          <p>Got an invite code?</p>\r\n        </div>\r\n        <div className={styles.Deals__bannerSort}>\r\n          <p>Sort by:</p>\r\n          <select>\r\n            <option value=\"\">Recommended</option>\r\n            <option value=\"\">Most Popular</option>\r\n            <option value=\"\">Newest</option>\r\n          </select>\r\n          <div className={styles.Deals__bannerSort__Search}>\r\n            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n            <input\r\n              placeholder=\"Discover your next favourite thing...\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deals;\r\n","E:\\product-hunt\\src\\Components\\Product\\Product.jsx",["198"],"import React from 'react'\r\nimport styles from './Product.module.css'\r\nimport { useSelector , useDispatch } from 'react-redux'\r\nimport { getBestProducts, getOlderProducts, getProducts, getUpcomingProducts } from '../../Redux/products/actions'\r\nimport ProductCard from './ProductCard'\r\nimport SideCard from './SideCard'\r\n \r\n\r\n \r\nfunction Product() {\r\n   const productData = useSelector ( state => state.productsReducer.productData)\r\n   const upcomingProductsData = useSelector ( state => state.productsReducer.upcomingProductsData)\r\n   const olderProductsData = useSelector ( state => state.productsReducer.olderProductsData)\r\n   const bestDealsData = useSelector ( state => state.productsReducer.bestDealsData)\r\n   const [ showMore , setShowMore ] = React.useState(false)\r\n   const [ showScroll, setShowScroll ] = React.useState(false)\r\n\r\n   \r\n   const dispatch = useDispatch()  \r\n   \r\n   //scroll to top\r\n    const checkScrollTop = () => {\r\n        if (!showScroll && window.pageYOffset > 400){\r\n        setShowScroll(true)\r\n        } else if (showScroll && window.pageYOffset <= 400){\r\n        setShowScroll(false)\r\n        }\r\n    };\r\n    \r\n    window.addEventListener('scroll', checkScrollTop)\r\n\r\n    const scrollTop = () =>{\r\n        window.scrollTo({top: 0, behavior: 'smooth'});\r\n    };\r\n\r\n    //getting all products\r\n    const getTodayProducts = (params) => {\r\n        if(params === \"popular\"){\r\n            const action = getProducts({\r\n                \"_sort\" : \"upvotes\",\r\n               \"_order\": \"desc\",\r\n               \"status\":\"TODAY\"\r\n            })\r\n            dispatch(action)\r\n        }\r\n        else{\r\n            const action = getProducts({\r\n                \"_sort\" : \"id\",\r\n               \"_order\": \"asc\",\r\n               \"status\":\"TODAY\"\r\n            })\r\n            dispatch(action)\r\n        }\r\n    }\r\n\r\n    \r\n    const getBestDealsHandler = () =>{\r\n        const action = getBestProducts({\r\n            \"_sort\" : \"upvotes\",\r\n            \"_order\": \"desc\",\r\n           \"status\":\"BEST\"\r\n        })\r\n        dispatch(action)\r\n    }\r\n   \r\n    const getOlderProductsHandler = () =>{\r\n        const action = getOlderProducts({\r\n           \"status\":\"PROCESSED\"\r\n        })\r\n        dispatch(action)\r\n    }\r\n\r\n    \r\n    const getUpcomingProductsHandler = () =>{\r\n        const action = getUpcomingProducts({\r\n            \"status\":\"UPCOMING\",\r\n            \"_sort\" : \"id\",\r\n            \"_order\": \"desc\",\r\n            \"_page\": 1,\r\n            \"_limit\": 5,\r\n        })\r\n        dispatch(action)\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        getTodayProducts(\"popular\")\r\n        getBestDealsHandler()\r\n        getOlderProductsHandler()\r\n        getUpcomingProductsHandler()\r\n    },[])\r\n\r\n    const dataHandlers =  { getTodayProducts , getBestDealsHandler , getOlderProductsHandler , getUpcomingProductsHandler }\r\n\r\n    // show more products pagination toggle\r\n    const showMoreHandler = () => {\r\n        setShowMore(!showMore)\r\n    }\r\n    \r\n \r\n    \r\n\r\n    return (\r\n    <div className={styles.Product__Parent}>\r\n        <div className={styles.Product}>\r\n             <div className={styles.Product__main}>\r\n                 <div className={styles.Product__main__head}>\r\n                    <div>\r\n                        <h2>Today</h2>\r\n                    </div>\r\n                    <div>\r\n                        <span onClick={()=>getTodayProducts(\"popular\")}>POPULAR</span> <b>|\r\n                        </b> <span onClick={()=>getTodayProducts(\"newest\")}>NEWEST</span>\r\n                    </div>\r\n                 </div>\r\n                 <div className={styles.Product__main__content}>\r\n                     {!showMore? productData?.filter((_,index) => index < 10)\r\n                     .map( item => (\r\n                          <ProductCard dataHandlers = {dataHandlers}  key={item.id} {...item}></ProductCard>\r\n                     )) :  productData?.map( item => (\r\n                          <ProductCard dataHandlers = {dataHandlers}  key={item.id} {...item}></ProductCard>\r\n                     ))}\r\n                    <div  onClick={showMoreHandler} className={styles.Product__main__content__more}>\r\n                         <i className=\"fas fa-chevron-down\"></i> \r\n                         <button > {showMore ? \"Show Less\" : `Show ${productData.length-10} More`}</button>\r\n                     </div>\r\n                 </div>\r\n                 <br></br>\r\n                 <br></br>\r\n                 <div className={styles.Product__main__head}>\r\n                    <div>\r\n                        <h2>Best Deals</h2>\r\n                    </div>\r\n                 </div>\r\n                 <div className={styles.Product__main__content}>\r\n                    {!showMore? bestDealsData.map( item => (\r\n                          <ProductCard key={item.id}  dataHandlers = {dataHandlers} {...item}></ProductCard>\r\n                     )) :  productData?.map( item => (\r\n                          <ProductCard dataHandlers = {dataHandlers}  key={item.id} {...item}></ProductCard>\r\n                     ))}\r\n                 </div>\r\n                 <br></br>\r\n                 <br></br>\r\n                 <div className={styles.Product__main__head}>\r\n                    <div>\r\n                        <h2>Older</h2>\r\n                    </div>\r\n                 </div>\r\n                 <div className={styles.Product__main__content}>\r\n                    {!showMore? olderProductsData?.filter((_,index) => index < 10)\r\n                     .map( item => (\r\n                          <ProductCard dataHandlers = {dataHandlers}  key={item.id} {...item}></ProductCard>\r\n                     )) :  productData?.map( item => (\r\n                          <ProductCard dataHandlers = {dataHandlers}  key={item.id} {...item}></ProductCard>\r\n                     ))}\r\n                    <div  onClick={showMoreHandler} className={styles.Product__main__content__more}>\r\n                        <i className=\"fas fa-chevron-down\"></i> \r\n                        <button > {showMore ? \"Show Less\" : `Show ${olderProductsData.length-10} More`}</button>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n             <div className={styles.Product__side}>\r\n                <div className={styles.Product__side__awards}>\r\n                        \r\n                </div>\r\n                <div className={styles.Product__side__highlight}>\r\n                    <h2>Upcoming products <span>powered by Masai</span></h2>\r\n                    <div className={styles.Product__side__highlight__cards}>\r\n                        {upcomingProductsData?.map( item => (\r\n                            <SideCard key={item.id} {...item}></SideCard>\r\n                        ))}\r\n                    </div>\r\n                    <div className={styles.Product__side__highlight__button}>\r\n                        <button>View All</button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.Product__side__highlight}>\r\n                    <h2>Hiring Now</h2>\r\n                    <div className={styles.Product__side__highlight__cards}>\r\n                        {productData?.filter((item,index) => index < 3).map( item => (\r\n                            <SideCard key={item.id} {...item}></SideCard>\r\n                        ))}\r\n                    </div>\r\n                    <div className={styles.Product__side__highlight__button}>\r\n                        <button>View All Jobs</button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.Product__side__highlight}>\r\n                    <h2>Top Discussions</h2>\r\n                    <div className={styles.Product__side__highlight__cards}>\r\n                        {productData?.filter((item,index) => index < 4).map( item => (\r\n                            <SideCard key={item.id} {...item}></SideCard>\r\n                        ))}\r\n                    </div>\r\n                    <div className={styles.Product__side__highlight__button}>\r\n                        <button>View More Discussions</button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.FooterMini}>\r\n                     <ul>\r\n                        <li>Blog</li>\r\n                        <li>Newsletter</li>\r\n                        <li>Apps</li>\r\n                        <li>About</li>\r\n                        <li>FAQ</li>\r\n                        <li>Terms</li>\r\n                        <li>Privacy and Cookies</li>\r\n                        <li>Twitter</li>\r\n                        <li>Facebook</li>\r\n                        <li>Instagram</li>\r\n                        <li>Advertise</li>\r\n                    </ul> \r\n                    <div>\r\n                        <p>© 2021 PRODUCT HUNT</p>\r\n                    </div>\r\n                </div>\r\n             </div>\r\n        </div>\r\n        <div className={styles.Product__scroll}>\r\n            <i style={{height: 40, display: showScroll ? 'inline' : 'none'}} onClick={scrollTop} className=\"fas fa-chevron-circle-up\"></i>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","E:\\product-hunt\\src\\Components\\Mentors\\Mentors.jsx",[],"E:\\product-hunt\\src\\Components\\Ask\\AskPage.jsx",["199","200","201"],"import React from \"react\";\r\nimport styles from \"./AskPage.module.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ProductSidebar from \"./ProductSidebar\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Recommendation from \"./Recommendation\";\r\nimport Comments from \"./Comments\";\r\nconst AskPage = () => {\r\n  const { id } = useParams();\r\n  const [showComments, setShowComments] = React.useState(false);\r\n  \r\n  const askQuestions = useSelector((state) => state.askReducer.askQuestions);\r\n  const currentQuestion = askQuestions.filter(\r\n    (question) => question.id == id\r\n  )[0];\r\n\r\n  const renderRecommendations = () => {\r\n    if (currentQuestion.recommendations.length === 0) {\r\n      return <h4>No Product Recommendations Yet.</h4>;\r\n    }\r\n    return currentQuestion.recommendations.map((recommendation) => (\r\n      <Recommendation key={recommendation.id} {...recommendation} />\r\n    ));\r\n  };\r\n  if (!currentQuestion) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className={styles.AskPage__parent}>\r\n      <div className={styles.AskPage}>\r\n        <div className={styles.AskPage__content}>\r\n          <div className={styles.AskPage__contentHeader}>\r\n            <div className={styles.AskPage__contentHeader__userheader}>\r\n              <img src={currentQuestion.imageUrl} alt=\"image\" />\r\n              <h4>{currentQuestion.name}</h4>\r\n              <p>{currentQuestion.about}</p>\r\n            </div>\r\n            <h3>{currentQuestion.title}</h3>\r\n            <p>{currentQuestion.description}</p>\r\n            <div className={styles.AskPage__contentHeader__footer}>\r\n              <p>{currentQuestion.recommendations.length} RECOMMENDED</p>\r\n              <button onClick={() => setShowComments((prev) => !prev)}>\r\n                COMMENTS\r\n              </button>\r\n              <button>FOLLOW</button>\r\n            </div>\r\n            {showComments ? (\r\n              <Comments\r\n                allComments={currentQuestion.comments} questionId={currentQuestion.id}\r\n                \r\n              />\r\n            ) : null}\r\n          </div>\r\n          <div className={styles.AskPage__contentRecommendations}>\r\n            {renderRecommendations()}\r\n          </div>\r\n        </div>\r\n        <ProductSidebar currentQuestion={currentQuestion} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AskPage;\r\n","E:\\product-hunt\\src\\Components\\Product\\ProductModal.jsx",["202","203"],"import React from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport {  getRelatedProducts, getSoloProduct } from '../../Redux/products/actions'\r\nimport styles from './ProductModal.module.css'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport SideCard from './SideCard'\r\nimport { FacebookShareButton , TwitterShareButton } from 'react-share'\r\nimport { findCurrentUserCollections, findCurrentUserUpvotes, getAllUsersAuthData, postNewComments, updateCollections, updateUpvotes, upVoteCounter } from '../../Redux/operations/actions'\r\nimport CommentsSection from './CommentsSection'\r\nimport { Button, Input } from 'antd';\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nfunction ProductModal() {\r\n    let { id } = useParams()\r\n    const dispatch = useDispatch()\r\n    const soloData = useSelector(state => state.productsReducer.soloData)\r\n    const relatedProductData = useSelector(state => state.productsReducer.relatedProductsData)\r\n    const upvoted = useSelector(state => state.operationsReducer.upvotes)\r\n    const isLoggedIn = useSelector(state => state.authReducer.isLoggedIn)\r\n    const history = useHistory()\r\n    const [ showNav , setShowNav ] = React.useState(false)\r\n    const currentUser = useSelector(state => state.authReducer.currentUser)\r\n    const [ trigger , setTrigger ] = React.useState(false)\r\n    const collectionsOfUser = useSelector(state => state.operationsReducer.collection)\r\n    const [ newComment , setNewComment ] = React.useState(\"\")\r\n\r\n    const handleShowNav = () => {\r\n        if (window.pageYOffset >= 350){\r\n            setShowNav(true)\r\n        } \r\n        else{\r\n            setShowNav(false)\r\n        }\r\n    };\r\n    \r\n    window.addEventListener('scroll', handleShowNav)\r\n\r\n\r\n    const modalToggleHandler = () =>{\r\n        history.push(\"/\")\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        getSoloDataHandler()\r\n    },[id,trigger])\r\n\r\n    const getSoloDataHandler = () => {\r\n        const action = getSoloProduct(id)\r\n        dispatch(action)\r\n        .then(res =>  getRelatedProductsHandler(res.categories))\r\n    }\r\n\r\n\r\n\r\n    const getRelatedProductsHandler = (categories) => {\r\n        const action = getRelatedProducts(categories)\r\n        dispatch(action)\r\n    }\r\n\r\n  \r\n    React.useEffect(()=>{\r\n        if(isLoggedIn){\r\n            dispatch(findCurrentUserUpvotes(currentUser.email))\r\n        }\r\n    },[currentUser])\r\n\r\n\r\n    let { logo , name , tagline , categories , upvotes , description , developer , video , productDiscussion } = soloData\r\n\r\n\r\n    //upvoting and downvoting products\r\n    \r\n    const productUpvoteHandler = () =>{\r\n        if(!isLoggedIn){\r\n            alert(\"You need to login\")\r\n            return\r\n        }\r\n        dispatch(getAllUsersAuthData({\r\n            email : currentUser.email\r\n        }))\r\n        .then((res) => {\r\n            if(res.data === undefined){\r\n                const upvoted = []\r\n                upvoted.push(Number(id))\r\n                dispatch(updateUpvotes(upvoted , res.id , currentUser.email))\r\n                 .then(res => dispatch(findCurrentUserUpvotes(currentUser.email)))\r\n                 .then(res => dispatch(upVoteCounter({upvotes : upvotes + 1} , id))\r\n                               .then(res=> setTrigger(!trigger))  \r\n                 )     \r\n            }\r\n            else{\r\n                const findExistence = res.data.find(item => item === Number(id))\r\n                if(findExistence === undefined){\r\n                    const updatedUpVotes = [...res.data , Number(id) ]\r\n                    dispatch(updateUpvotes(updatedUpVotes , res.id , currentUser.email)) \r\n                     .then(res => dispatch(findCurrentUserUpvotes(currentUser.email)))    \r\n                     .then(res => dispatch(upVoteCounter({upvotes : upvotes + 1} , id))\r\n                     .then(res=> setTrigger(!trigger))  \r\n                    )                    \r\n                }\r\n                else{\r\n                    const updatedUpVotes = res.data.filter(item => item !== Number(id))\r\n                    dispatch(updateUpvotes(updatedUpVotes , res.id , currentUser.email)) \r\n                     .then(res => dispatch(findCurrentUserUpvotes(currentUser.email)))  \r\n                     .then(res => dispatch(upVoteCounter({upvotes : upvotes - 1} , id))\r\n                     .then(res=> setTrigger(!trigger))  \r\n                    )   \r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    // adding products to personal collection\r\n\r\n    const productCollectionHandler = () =>{\r\n        if(!isLoggedIn){\r\n            alert(\"You need to login\")\r\n            return\r\n        }\r\n        dispatch(getAllUsersAuthData({\r\n            email : currentUser.email\r\n        }))\r\n        .then((res) => {\r\n            if(res.collectionData === undefined){\r\n                const collection = []\r\n                collection.push(Number(id))\r\n                dispatch(updateCollections(collection , res.id ))\r\n                 .then(res => dispatch(findCurrentUserCollections(currentUser.email)))   \r\n            }\r\n            else{\r\n                const findExistence = res.collectionData.find(item => item === Number(id))\r\n                if(findExistence === undefined){\r\n                    const updatedCollection = [...res.collectionData , Number(id) ]\r\n                    dispatch(updateCollections(updatedCollection , res.id , currentUser.email)) \r\n                     .then(res => dispatch(findCurrentUserCollections(currentUser.email)))                    \r\n                }\r\n                else{\r\n                    const updatedCollection = res.collectionData.filter(item => item !== Number(id))\r\n                    dispatch(updateCollections(updatedCollection , res.id , currentUser.email)) \r\n                     .then(res => dispatch(findCurrentUserCollections(currentUser.email)))   \r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const newCommentHandler = () =>{\r\n    productDiscussion = [...productDiscussion ,  {\r\n        commentID : uuid(),\r\n        userImage : currentUser.imageUrl, \r\n        userName :currentUser.name,\r\n        userComment : newComment ,\r\n        commentUpvotes : 0\r\n    } ]\r\n      dispatch(postNewComments(id , productDiscussion))\r\n     .then(res =>{setTrigger(!trigger)})\r\n    }     \r\n    \r\n    \r\n\r\n    return (\r\n        <div className={styles.ProductModal}>\r\n            <div className={styles.ProductModal__main}>\r\n              <div className={styles.ProductModal__main__head}>\r\n                <div className={styles.ProductModal__main__head__info}>\r\n                    <div>\r\n                        <img src={logo} alt=\"logo\"></img>\r\n                    </div>\r\n                    <div>\r\n                        <h2>{name}</h2>\r\n                        <p>{tagline}</p>\r\n                        <div className={styles.ProductModal__main__head__info__categories}>\r\n                                <div><button>{categories}</button></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.ProductModal__main__head__rank}>\r\n                    {/* <h1>Rank</h1> */}\r\n                </div>\r\n              </div>\r\n              <div className={styles.ProductModal__main__content}>\r\n                <div className={styles.ProductModal__main__content__demo}>\r\n                    <div className={styles.ProductModal__main__content__demo__video}>\r\n                        <div>\r\n                            <iframe type=\"text/html\" title = {id} width=\"673\" height=\"380\" src={video} alt=\"404 Not Found\" allowFullScreen></iframe>\r\n                        </div>\r\n                        <div className={styles.ProductModal__main__content__demo__video__description} >\r\n                            <p>{description}</p>\r\n                        </div>\r\n                        <div className={styles.ProductModal__main__content__demo__video__footer}>\r\n                            <div>\r\n                                <div className={styles.Twitter}>\r\n                                    <TwitterShareButton url={window.location.href}>\r\n                                     <button > <i className=\"fab fa-twitter\"></i> Tweet</button>\r\n                                    </TwitterShareButton>\r\n                                </div>\r\n                                <div className={styles.Facebook}>\r\n                                    <FacebookShareButton url={window.location.href}>\r\n                                        <button> <i className=\"fab fa-facebook-f\"></i> Share</button>\r\n                                    </FacebookShareButton>\r\n                                </div>\r\n                                <div>\r\n                                    <button> <i className=\"fas fa-code\"></i> Embed</button>\r\n                                </div>\r\n                                <div>\r\n                                    <button \r\n                                        style={collectionsOfUser?.find(item => item === Number(id)) !== undefined && isLoggedIn ? {border:\"1px solid rgb(173, 84, 0)\" ,borderRadius: \"3px\", color: \"white\" , backgroundColor: \"orange\"} : {}} \r\n                                        onClick={()=>productCollectionHandler()} >\r\n                                        <i className=\"far fa-plus-square\"></i> \r\n                                        {collectionsOfUser?.find(item => item === Number(id)) !== undefined && isLoggedIn ?  \"Collected\" :  \"Collect\"}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <button>Featured 11 hour ago</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.ProductModal__main__content__demo__discussion}>\r\n                        <h1>Discussion</h1>\r\n                        <div className={styles.ProductModal__main__content__demo__discussion__comments}>\r\n                           <div>\r\n                            {productDiscussion?.map( item => (\r\n                                    <CommentsSection {...item} />\r\n                                ))}\r\n                           </div>\r\n                           {isLoggedIn ? \r\n                            <div style={{display:\"flex\"}}>   \r\n                              <Input value={newComment} onChange={(e)=>setNewComment(e.target.value)} bordered=\"false\" allowClear ></Input>\r\n                              <Button onClick={newCommentHandler}>Comment</Button>\r\n                            </div>\r\n                           :  \r\n                           <div style={{display:\"flex\"}}>   \r\n                                <Input disabled value={newComment} onChange={(e)=>setNewComment(e.target.value)} bordered=\"false\" allowClear ></Input>\r\n                                <Button disabled onClick={newCommentHandler}>Comment</Button>\r\n                           </div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.ProductModal__main__content__side}>\r\n                    <div className={styles.ProductModal__main__content__side__head}>\r\n                        <div>\r\n                            <button className={styles.button__light}>\r\n                                GET IT\r\n                            </button>\r\n                            <button onClick={()=>productUpvoteHandler()} \r\n                                style={upvoted?.find(item => item === Number(id)) !== undefined && isLoggedIn ? {border:\"1px solid rgb(173, 84, 0)\" , backgroundColor:\"white\", color:\"rgb(173, 84, 0)\"} : {}} className={styles.button__dark}>\r\n                                <i className=\"fas fa-caret-up\"></i> UPVOTE {upvotes}\r\n                            </button>\r\n                        </div>\r\n                        <div className={styles.ProductModal__main__content__side__head__upvoters}>\r\n                            {\r\n                              new Array(14).fill(0).map((_,index)=>(\r\n                                <div key={index+1}>\r\n                                    <img src={`https://i.pravatar.cc/150?img=${index+1}`} alt=\"voters\"></img>\r\n                                </div>\r\n                              ))   \r\n                            }     \r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.ProductModal__main__content__side__contributors}>\r\n                        <div>\r\n                            <b>Developer</b>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <img src=\"https://i.pravatar.cc/150?img\" alt=\"voters\"></img>    \r\n                            </div>\r\n                            <div>\r\n                                <p>{developer}</p>\r\n                                <span>@{developer}</span> \r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                    <div className={styles.ProductModal__main__content__side__related}>\r\n                        <div>\r\n                            <b>Related Products</b>\r\n                        </div>\r\n                        <div className={styles.Product__sideModal__main__content__side__cards}>\r\n                            {relatedProductData?.filter((_,index) => index < 6 ).map( item => (\r\n                                <SideCard key={item.id} {...item}></SideCard>\r\n                            ))}\r\n                         </div> \r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div onClick={modalToggleHandler} className={styles.ProductModal__close}>\r\n                <i class=\"fas fa-times-circle\"></i>\r\n            </div>\r\n            { showNav && <div className={styles.ScrollNav__parent}>\r\n                <div className = {styles.ScrollNav}>\r\n                <div className={styles.ScrollNav__right}>\r\n                        <div>\r\n                            <img src={logo} alt=\"logo\"></img>\r\n                        </div>\r\n                        <div>\r\n                            <h2>{name}</h2>\r\n                            <p>{tagline}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={styles.ScrollNav__left}>\r\n                            <div>\r\n                                <button className={styles.button__light}>\r\n                                    GET IT\r\n                                </button>\r\n                            </div>\r\n                            <div>\r\n                                <button onClick={()=>productUpvoteHandler()} \r\n                                style={upvoted?.find(item => item === Number(id)) !== undefined && isLoggedIn ? {border:\"1px solid rgb(173, 84, 0)\" , backgroundColor:\"white\", color:\"rgb(173, 84, 0)\"} : {}} className={styles.button__dark}>\r\n                                <i className=\"fas fa-caret-up\"></i> UPVOTE {upvotes}\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductModal\r\n","E:\\product-hunt\\src\\Components\\Ask\\Ask.jsx",[],"E:\\product-hunt\\src\\Components\\Discussions\\Discussions.jsx",[],"E:\\product-hunt\\src\\Redux\\auth\\actions.js",[],"E:\\product-hunt\\src\\Components\\Jobs\\Jobs.jsx",["204","205","206"],"import React from \"react\";\r\nimport Styles from \"./Jobs.module.css\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { getjobs,getremote,geteng, getdesign,getcustomer,getproduct,getsales,getmarketing } from \"../../Redux/jobs/action\";\r\nconst Jobs = () => {\r\n  const { jobs } = useSelector((state) => state.jobsreducer);\r\n  const isLoading = useSelector((state) => state.jobsreducer);\r\n  const isError = useSelector((state) => state.jobsreducer);\r\n  const [rem,setRem]=React.useState(false)\r\n  const [eng,setEng]=React.useState(false)\r\n  const [design,setDesign]=React.useState(false)\r\n  const [marketing,setMarketing]=React.useState(false)\r\n  const [sales,setSales]=React.useState(false)\r\n  const [customer,setCustomer]=React.useState(false)\r\n  const [product,setProduct]=React.useState(false)\r\n  const dispatch = useDispatch();\r\n  \r\n  React.useEffect(() => {\r\n    dispatch(getjobs());\r\n    \r\n  }, [dispatch]);\r\n\r\nconst handleremote=()=>{\r\n    setRem(prev=>!prev)\r\n    // dispatch(getdesign({rem,eng,design,marketing,sales,customer,product}))\r\n      dispatch(getremote({rem}))\r\n}\r\n\r\nconst handleeng = ()=>{\r\n    setEng(prev=>!prev)\r\n      dispatch(geteng({eng,rem}))\r\n    //  dispatch(getdesign({rem,eng,design,marketing,sales,customer,product}))\r\n}\r\n\r\nconst handledesign = ()=>{\r\n     setDesign(prev=>!prev)\r\n     dispatch(getdesign({design,rem}))\r\n}\r\n\r\nconst handlemarketing=()=>{\r\n  setMarketing(prev=>!prev)\r\n  dispatch(getmarketing({marketing,rem}))\r\n}\r\n\r\nconst handlesales=()=>{\r\n  setSales(prev=>!prev)\r\n  dispatch(getsales({sales,rem}))\r\n}\r\nconst handlecustomer=()=>{\r\n  setCustomer(prev=>!prev)\r\n  dispatch(getcustomer({customer,rem}))\r\n}\r\nconst handleproduct=()=>{\r\n  setProduct(prev=>!prev)\r\n  dispatch(getproduct({product,rem}))\r\n}\r\nconsole.log(jobs);\r\nconsole.log(rem,eng,design,marketing,sales,customer,product)\r\n  console.log(jobs);\r\n  return (\r\n    <>\r\n      <div className={Styles.Jobs_outerbox}>\r\n        <div className={Styles.Jobs_first_outerbox}>\r\n          {jobs?.map((item) => {\r\n            return item!==null && (\r\n              <>\r\n                <div className={Styles.Jobs_firstbox}>\r\n                  <div classname={Styles.Jobs_firstbox1}>\r\n                    <img src={item.avatar} alt=\"img\" />\r\n                  </div>\r\n                  <div\r\n                    classname={Styles.Jobs_firstbox2}\r\n                    style={{ marginLeft: \"20px\", width: \"45%\" }}\r\n                  >\r\n                    <h2 style={{ marginBottom: \"10px\" }}>{item.title}</h2>\r\n\r\n                    <h4 style={{ marginBottom: \"10px\" }}>{item.role}</h4>\r\n\r\n                    <p>{item.location}</p>\r\n                  </div>\r\n                  <div style={{ width: \"40%\" }}>\r\n                    <div style={{ textAlign: \"right\" }}>{item.pics}</div>\r\n                    <div\r\n                      style={{\r\n                        marginLeft: \"40%\",\r\n                        marginTop: \"30%\",\r\n                        display: \"flex\",\r\n                      }}\r\n                    >\r\n                      <button id={Styles.Jobs_buttondesign}>SHARE</button>\r\n                      <button id={Styles.Jobs_buttondesign}>APPLY</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <br />\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className={Styles.Jobs_secondbox} id={Styles.Jobs_secondbox}>\r\n          <div className={Styles}>\r\n            <div className={Styles.Jobs_catbox}>\r\n              <div className={Styles.Jobs_catbox1}>\r\n                <img\r\n                  src=\"https://ph-static.imgix.net/kitty_ph.png?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=80&h=80&fit=max&dpr=2\"\r\n                  alt=\"cat img\"\r\n                />\r\n              </div>\r\n              <div className={Styles.Jobs_catbox2}>\r\n                <h4>Are you hiring?</h4>\r\n\r\n                <h5>Advertise from $299</h5>\r\n\r\n                <button className={Styles.jobbutton}>POST A JOB</button>\r\n              </div>\r\n            </div>\r\n            <h3 className={Styles.Jobs_filterbox}>Filters</h3>\r\n            <div className={Styles.Jobs_checkbox}>\r\n              <label>\r\n                <input className={Styles.Jobs_input} type=\"checkbox\" onChange={handleeng}/>\r\n                ⚒️ Engineering\r\n              </label>\r\n              <br />\r\n              <label>\r\n                <input className={Styles.Jobs_input} type=\"checkbox\" onChange={handledesign} />\r\n                🎨 Design\r\n              </label>\r\n              <br />\r\n              <label>\r\n                <input className={Styles.Jobs_input} type=\"checkbox\" onChange={handlemarketing}/>\r\n                📢 Marketing\r\n              </label>\r\n              <br />\r\n              <label>\r\n                <input className={Styles.Jobs_input} type=\"checkbox\" onChange={handlesales}/>\r\n                📈 Sales\r\n              </label>\r\n              <br />\r\n              <label>\r\n                <input className={Styles.Jobs_input} type=\"checkbox\" onChange={handlecustomer}/>\r\n                💖 Customer Support\r\n              </label>\r\n              <br />\r\n              <label>\r\n                <input className={Styles.Jobs_input} type=\"checkbox\" onChange={handleproduct} />\r\n                💎 Product\r\n              </label>\r\n              <br />\r\n            </div>\r\n            <div className={Styles.Jobs_location}>\r\n              <h4\r\n                className={Styles.Jobs_filterbox}\r\n                style={{ marginLeft: \"4%\" }}\r\n              >\r\n                Location\r\n              </h4>\r\n              <select\r\n                className={Styles.Jobs_select}\r\n                placeholder=\"SELECT A LOCATION\"\r\n              >\r\n                <option>Copenhagen</option>\r\n                <option>Remote</option>\r\n                <option>San Francisco</option>\r\n                <option>Boulder,CO,USA</option>\r\n                <option>Oakland</option>\r\n              </select>\r\n              <div className={Styles.Jobs_checkbox}>\r\n                <label>\r\n                  <input className={Styles.Jobs_input} type=\"checkbox\"  onChange={handleremote}/>\r\n                  🌎 Remote jobs only\r\n                </label>\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Jobs };\r\n",["207","208"],"E:\\product-hunt\\src\\Redux\\jobs\\actionTypes.js",[],"E:\\product-hunt\\src\\Components\\Auth\\AuthModal.jsx",["209","210","211"],"import React from \"react\";\r\nimport styles from \"./AuthModal.module.css\";\r\nimport Modal from \"react-modal\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { loginSuccess, loginFailure } from \"../../Redux/auth/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addUser } from \"../../Redux/auth/actions\";\r\nimport { AuthContext } from \"../../AuthContextProvider\";\r\nconst AuthModal = () => {\r\n  let isLoggedIn = useSelector((state) => state.authReducer.isLoggedIn);\r\n  let currentUser = useSelector((state) => state.authReducer.currentUser);\r\n   const { isOpen, setIsOpen } = React.useContext(AuthContext);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onRequestClose={() => {\r\n          setIsOpen(false);\r\n        }}\r\n        className={styles.AuthModal__modal}\r\n        overlayClassName={styles.AuthModal___ModalOverlay}\r\n      >\r\n        <img\r\n          src=\"https://ph-static.imgix.net/category-tech/kitty.png?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=100&h=92&fit=max\"\r\n          alt=\"not found\"\r\n        />\r\n        <h2>Sign up on Product Hunt</h2>\r\n        <p>\r\n          Join our community of friendly folks discovering and sharing the\r\n          latest products in tech.\r\n        </p>\r\n        <div className={styles.AuthModal__modalButtons}>\r\n          <button style={{ backgroundColor: \"#00ACED\", color: \"white\" }}>\r\n            <i className=\"fa fa-twitter\"></i>\r\n            LOG IN WITH TWITTER\r\n          </button>\r\n          <button style={{ backgroundColor: \"#3B5998\", color: \"white\" }}>\r\n            <i className=\"fa fa-facebook\"></i>\r\n            LOG IN WITH FACEBOOK\r\n          </button>\r\n          <GoogleLogin\r\n            clientId=\"411977787315-mrdcahuab81r8iba5l4hms9d6jd40vii.apps.googleusercontent.com\"\r\n            buttonText=\"Login Google\"\r\n            onSuccess={(response) => {\r\n              dispatch(loginSuccess(response));\r\n              dispatch(addUser(response.profileObj));\r\n              \r\n              setIsOpen(false);\r\n            }}\r\n            onFailure={(response) => dispatch(loginFailure(response))}\r\n            cookiePolicy={\"single_host_origin\"}\r\n          >\r\n            LOG IN WITH GOOGLE\r\n          </GoogleLogin>\r\n          <button style={{ backgroundColor: \"#333333\", color: \"white\" }}>\r\n            <i className=\"fa fa-angellist\"></i>\r\n            LOG IN WITH ANGELLIST\r\n          </button>\r\n        </div>\r\n        <p>We'll never post to any of your accounts without your permission.</p>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthModal;\r\n","E:\\product-hunt\\src\\Redux\\products\\actions.js",[],"E:\\product-hunt\\src\\Redux\\jobs\\action.js",[],"E:\\product-hunt\\src\\Components\\Product\\ProductCard.jsx",["212","213","214"],"import React from \"react\";\r\nimport styles from \"./Product.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  getAllUsersAuthData,\r\n  findCurrentUserUpvotes,\r\n  updateUpvotes,\r\n  upVoteCounter,\r\n} from \"../../Redux/operations/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AuthContext } from \"../../AuthContextProvider\";\r\n\r\nfunction ProductCard(props) {\r\n  const {\r\n    dataHandlers,\r\n    logo,\r\n    name,\r\n    category,\r\n    upvotes,\r\n    comments,\r\n    tagline,\r\n    id,\r\n  } = props;\r\n  const [trigger, setTrigger] = React.useState(false);\r\n  const {\r\n    getTodayProducts,\r\n    getBestDealsHandler,\r\n    getOlderProductsHandler,\r\n    getUpcomingProductsHandler,\r\n  } = dataHandlers;\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector((state) => state.authReducer.currentUser);\r\n  const upvoted = useSelector((state) => state.operationsReducer.upvotes);\r\n  const isLoggedIn = useSelector((state) => state.authReducer.isLoggedIn);\r\n\r\n  const { isOpen, setIsOpen } = React.useContext(AuthContext);\r\n\r\n  const modalToggleHandler = (id) => {\r\n    history.push(`/product/${id}`);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isLoggedIn) {\r\n      dispatch(findCurrentUserUpvotes(currentUser.email));\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const productUpvoteHandler = () => {\r\n    if (!isLoggedIn) {\r\n      setIsOpen(true);\r\n      return;\r\n    }\r\n    dispatch(\r\n      getAllUsersAuthData({\r\n        email: currentUser.email,\r\n      })\r\n    ).then((res) => {\r\n      if (res.data === undefined) {\r\n        const upvoted = [];\r\n        upvoted.push(id);\r\n        dispatch(updateUpvotes(upvoted, res.id, currentUser.email))\r\n          .then((res) => dispatch(findCurrentUserUpvotes(currentUser.email)))\r\n          .then((res) =>\r\n            dispatch(upVoteCounter({ upvotes: upvotes + 1 }, id)).then((res) =>\r\n              setTrigger(!trigger)\r\n            )\r\n          );\r\n      } else {\r\n        const findExistence = res.data.find((item) => item === id);\r\n        if (findExistence === undefined) {\r\n          const updatedUpVotes = [...res.data, id];\r\n          dispatch(updateUpvotes(updatedUpVotes, res.id, currentUser.email))\r\n            .then((res) => dispatch(findCurrentUserUpvotes(currentUser.email)))\r\n            .then((res) =>\r\n              dispatch(\r\n                upVoteCounter({ upvotes: upvotes + 1 }, id)\r\n              ).then((res) => setTrigger(!trigger))\r\n            );\r\n        } else {\r\n          const updatedUpVotes = res.data.filter((item) => item !== id);\r\n          dispatch(updateUpvotes(updatedUpVotes, res.id, currentUser.email))\r\n            .then((res) => dispatch(findCurrentUserUpvotes(currentUser.email)))\r\n            .then((res) =>\r\n              dispatch(\r\n                upVoteCounter({ upvotes: upvotes - 1 }, id)\r\n              ).then((res) => setTrigger(!trigger))\r\n            );\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getTodayProducts(\"popular\");\r\n    getBestDealsHandler();\r\n    getOlderProductsHandler();\r\n    getUpcomingProductsHandler();\r\n  }, [trigger]);\r\n\r\n  return (\r\n    <div className={styles.ProductCard}>\r\n      <div className={styles.ProductCard__img}>\r\n        <img src={logo} alt=\"product-img\"></img>\r\n      </div>\r\n      <div\r\n        onClick={() => modalToggleHandler(id)}\r\n        className={styles.ProductCard__content}\r\n      >\r\n        <h2>\r\n          {name}{\" \"}\r\n          <span>\r\n            <i className=\"fas fa-directions\"></i>\r\n          </span>\r\n        </h2>\r\n        <p>{tagline}</p>\r\n        <div className={styles.ProductCard__content__footer}>\r\n          <div>\r\n            <i className=\"fas fa-comment\"></i>\r\n            <span>{comments}</span>\r\n          </div>\r\n          <div>\r\n            <span>{category}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={() => productUpvoteHandler()}\r\n        className={\r\n          upvoted?.find((item) => item === id) !== undefined && isLoggedIn\r\n            ? styles.ProductCard__upvote__clicked\r\n            : styles.ProductCard__upvote\r\n        }\r\n      >\r\n        <div>\r\n          <i className=\"fas fa-caret-up\"></i>\r\n        </div>\r\n        <div>\r\n          <p>{upvotes}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n","E:\\product-hunt\\src\\Components\\Ask\\AskHeader.jsx",[],"E:\\product-hunt\\src\\Components\\Product\\SideCard.jsx",["215"],"import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styles from './Product.module.css'\r\n\r\nfunction SideCard(props) {\r\n    const { name , tagline , image, logo , id } = props\r\n    const history = useHistory()\r\n    \r\n    const modalRedirectHandler = (id) => {\r\n        history.push(`/product/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div onClick={()=>modalRedirectHandler(id)} className={styles.SideCard}>\r\n            <div className={styles.SideCard__content}>\r\n                <h2>{name}</h2>\r\n                <p>{tagline}</p>\r\n                <div className={styles.SideCard__content__follow} >\r\n                    {/* <div>\r\n                        <i className=\"fas fa-plus\"></i>\r\n                    </div> */}\r\n                    {/* <div>   \r\n                        <span> FOLLOW (0)</span> \r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n            <div className={styles.SideCard__img}>\r\n                <img src={logo} alt=\"product-img\"></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideCard\r\n\r\n\r\n ","E:\\product-hunt\\src\\Components\\Ask\\ProductSidebar.jsx",["216","217","218"],"import React from \"react\";\r\nimport styles from \"./ProductSidebar.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateRecommendation } from \"../../Redux/ask/actions\";\r\nimport { AuthContext } from \"../../AuthContextProvider\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst ProductSidebar = ({ currentQuestion }) => {\r\n  const [query, setQuery] = React.useState(\"\");\r\n  const [filteredProducts, setFilteredProducts] = React.useState([]);\r\n  const allProducts = useSelector((state) => state.productsReducer.productData);\r\n  console.log(allProducts)\r\n  const currentUser = useSelector((state) => state.authReducer.currentUser);\r\n  const isLoggedIn = useSelector((state) => state.authReducer.isLoggedIn);\r\n  \r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    setFilteredProducts(allProducts);\r\n  }, []);\r\n\r\n  const handleQueryChange = (e) => {\r\n    let myQuery = e.target.value;\r\n    setQuery(myQuery);\r\n    if (myQuery === '') {\r\n      let newFilteredProducts = allProducts;\r\n      setFilteredProducts(allProducts);\r\n    } else {\r\n      let newFilteredProducts = allProducts.filter((product) =>\r\n        product.name.toLowerCase().includes(myQuery.toLowerCase())\r\n      );\r\n      setFilteredProducts(newFilteredProducts);\r\n    }\r\n  };\r\n  const { isOpen, setIsOpen } = React.useContext(AuthContext);\r\n  // dispatch an action to change the recommendation array of a particular askedQuestion\r\n  const handleRecommendClick = (product) => {\r\n    if (!isLoggedIn) {\r\n      setIsOpen(true);\r\n      return;\r\n    }\r\n    const updatedRecommendations = [\r\n      ...currentQuestion.recommendations,\r\n      { id: uuid(), productId: product.id, ...currentUser },\r\n    ];\r\n    // dispatch this updated property to api\r\n    dispatch(updateRecommendation(currentQuestion.id, updatedRecommendations));\r\n  };\r\n  const renderProducts = () => {\r\n    if (filteredProducts.length === 0) return;\r\n    return filteredProducts.map((product) => {\r\n      return (\r\n        <div key={product.id} className={styles.ProductSidebar__productItem}>\r\n          <img src={product.logo} alt=\"logo\" />\r\n          <div>\r\n            <h4>{product.name}</h4>\r\n            <p>{product.tagline}</p>\r\n          </div>\r\n          <div className={styles.ProductSidebar__productItem__button}>\r\n            <button onClick={() => handleRecommendClick(product)}>\r\n              RECOMMEND\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {}, [query]);\r\n\r\n  return (\r\n    <div className={styles.ProductSidebar}>\r\n      <div className={styles.ProductSidebar__search}>\r\n        <h3>Search Products to Recommend:</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={handleQueryChange}\r\n          placeholder=\"Search Products Here..\"\r\n        />\r\n      </div>\r\n      <ul>{renderProducts()}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductSidebar;\r\n","E:\\product-hunt\\src\\Components\\Ask\\RightSidebar.jsx",["219","220","221","222"],"import React from \"react\";\r\nimport styles from \"./RightSidebar.module.css\";\r\n\r\nconst RightSidebar = () => {\r\n  return (\r\n    <div className={styles.RightSidebar}>\r\n      <div className={styles.RightSidebar__activityList}>\r\n        <p>YOUR ACTIVITY</p>\r\n        <ul>\r\n          <li>\r\n            <span>🤔</span>0 questions asked\r\n          </li>\r\n          <li>\r\n            <span>✍️</span>1 recommended\r\n          </li>\r\n          <li>\r\n            <span>👀</span>0 followed questions\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div className={styles.RightSidebar__helpfulList}>\r\n        <p>MOST HELPFUL THIS WEEK</p>\r\n        <ul>\r\n          <li>\r\n            <img\r\n              src=\"https://ph-avatars.imgix.net/844341/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=32&h=32&fit=crop\"\r\n              alt=\"image\"\r\n            />\r\n            <div>\r\n              <h4>Jason Grills</h4>\r\n              <p>Customer & Product Growth Manager</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <img\r\n              src=\"https://ph-avatars.imgix.net/844341/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=32&h=32&fit=crop\"\r\n              alt=\"image\"\r\n            />\r\n            <div>\r\n              <h4>Jason Grills</h4>\r\n              <p>Customer & Product Growth Manager</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <img\r\n              src=\"https://ph-avatars.imgix.net/844341/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=32&h=32&fit=crop\"\r\n              alt=\"image\"\r\n            />\r\n            <div>\r\n              <h4>Jason Grills</h4>\r\n              <p>Customer & Product Growth Manager</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <img\r\n              src=\"https://ph-avatars.imgix.net/844341/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=32&h=32&fit=crop\"\r\n              alt=\"image\"\r\n            />\r\n            <div>\r\n              <h4>Jason Grills</h4>\r\n              <p>Customer & Product Growth Manager</p>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightSidebar;\r\n","E:\\product-hunt\\src\\Components\\Ask\\Recommendation.jsx",["223","224","225"],"import React from \"react\";\r\nimport styles from \"./Recommendation.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst Recommendation = ({ id, productId, name, imageUrl }) => {\r\n  const allProducts = useSelector((state) => state.productsReducer.productData);\r\n\r\n  const currentProduct = allProducts.filter(\r\n    (product) => product.id == productId\r\n  )[0];\r\n  console.log(\"current product\", currentProduct);\r\n  const renderCurrentProduct = () => {\r\n  \r\n    if (!currentProduct) {\r\n      return (\r\n        <div className={styles.Recommendation}>\r\n          <h4></h4>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className={styles.Recommendation}>\r\n        <div className={styles.Recommendation__product}>\r\n          <img src={currentProduct.logo} alt=\"logo\" />\r\n          <div>\r\n            <h2>{currentProduct.name}</h2>\r\n            <p>{currentProduct.tagline}</p>\r\n            <div>\r\n              <img src={imageUrl} alt=\"user\" />\r\n              <h3>{name}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return <>{renderCurrentProduct()}</>;\r\n};\r\nexport default Recommendation;\r\n","E:\\product-hunt\\src\\Components\\Ask\\LeftSidebar.jsx",[],"E:\\product-hunt\\src\\Components\\Ask\\Content.jsx",["226"],"import React from \"react\";\r\nimport styles from \"./Content.module.css\";\r\nimport QuestionCard from \"./QuestionCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAskQuestions } from \"../../Redux/ask/actions\";\r\nconst Content = () => {\r\n  const dispatch = useDispatch();\r\n  const askQuestions = useSelector((state) => state.askReducer.askQuestions);\r\n  console.log(\"ask questions:\", askQuestions);\r\n  React.useEffect(() => {\r\n    dispatch(getAskQuestions());\r\n  }, []);\r\n\r\n  const renderQuestions = () => {\r\n    if (askQuestions.length === 0) return;\r\n    return askQuestions.map((question) => (\r\n      <QuestionCard key={question.id} {...question} />\r\n    ));\r\n  };\r\n  return (\r\n    <div className={styles.Content}>\r\n      {renderQuestions()}\r\n      {/* <QuestionCard />\r\n      <QuestionCard />\r\n      <QuestionCard />\r\n      <QuestionCard />\r\n      <QuestionCard />\r\n      <QuestionCard />\r\n      <QuestionCard />\r\n      <QuestionCard /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","E:\\product-hunt\\src\\Redux\\ask\\actions.js",["227","228"],"import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\n// get all askedquestions\r\nconst getAskQuestionsRequest = () => {\r\n  return {\r\n    type: actionTypes.GET_ASK_QUESTIONS_REQUEST,\r\n  };\r\n};\r\n\r\nconst getAskQuestionsSuccess = (askQuestions) => {\r\n  return {\r\n    type: actionTypes.GET_ASK_QUESTIONS_SUCCESS,\r\n    payload: askQuestions,\r\n  };\r\n};\r\n\r\nconst getAskQuestionsFailure = () => {\r\n  return {\r\n    type: actionTypes.GET_ASK_QUESTIONS_FAILURE,\r\n  };\r\n};\r\n\r\nconst getAskQuestions = () => {\r\n  return async (dispatch) => {\r\n    dispatch(getAskQuestionsRequest());\r\n    try {\r\n      const resQues = await axios.get(\r\n        \"https://json-server-nitansh-1.herokuapp.com/askedQuestions\"\r\n      );\r\n      const resUsers = await axios.get(\r\n        \"https://json-server-nitansh-1.herokuapp.com/users\"\r\n      );\r\n      let questions = resQues.data;\r\n      const users = resUsers.data;\r\n\r\n      const allQuestions = questions.map((question) => {\r\n        let user = users.filter((user) => user.email === question.email)[0];\r\n        question.name = user.name;\r\n        question.about = user.about;\r\n        question.imageUrl = user.imageUrl;\r\n        return question;\r\n      });\r\n      dispatch(getAskQuestionsSuccess(allQuestions));\r\n    } catch (err) {\r\n      console.log(\"inside get ask questions error\", err);\r\n      dispatch(getAskQuestionsFailure());\r\n    }\r\n  };\r\n};\r\n\r\n// update recommendation array of a particular product\r\n\r\nconst updateRecommendationRequest = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_RECOMMENDATION_REQUEST,\r\n  };\r\n};\r\n\r\nconst updateRecommendationSuccess = (askQuestions) => {\r\n  return {\r\n    type: actionTypes.UPDATE_RECOMMENDATION_SUCCESS,\r\n    payload: askQuestions,\r\n  };\r\n};\r\nconst updateRecommendationFailure = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_RECOMMENDATION_FAILURE,\r\n  };\r\n};\r\n\r\nconst updateRecommendation = (id, updatedRecommendations) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateRecommendationRequest());\r\n    try {\r\n      const response = await axios.patch(\r\n        `https://json-server-nitansh-1.herokuapp.com/askedQuestions/${id}`,\r\n        { recommendations: updatedRecommendations }\r\n      );\r\n\r\n      dispatch(getAskQuestions());\r\n      dispatch(updateRecommendationSuccess());\r\n    } catch (err) {\r\n      console.log(\"inside update recommendation error\", err);\r\n      dispatch(updateRecommendationFailure());\r\n    }\r\n  };\r\n};\r\n\r\n// post comment in asked questions\r\n\r\nconst postCommentRequest = () => {\r\n  return {\r\n    type: actionTypes.POST_ASK_QUESTIONS_REQUEST,\r\n  };\r\n};\r\n\r\nconst postCommentSuccess = (askQuestions) => {\r\n  return {\r\n    type: actionTypes.POST_ASK_QUESTIONS_SUCCESS,\r\n  };\r\n};\r\nconst postCommentFailure = () => {\r\n  return {\r\n    type: actionTypes.POST_ASK_QUESTIONS_FAILURE,\r\n  };\r\n};\r\n\r\nconst postComment = (id, comments) => {\r\n  console.log(\"Question to update:\"+id);\r\n  console.log(\"updated comments:\"+comments)\r\n  return async (dispatch) => {\r\n    dispatch(postCommentRequest());\r\n    try {\r\n      const response = await axios.patch(\r\n        `https://json-server-nitansh-1.herokuapp.com/askedQuestions/${id}`,\r\n        { comments: comments }\r\n      );\r\n      dispatch(getAskQuestions());\r\n      dispatch(postCommentSuccess());\r\n    } catch (err) {\r\n      console.log(\"inside post comment error\", err);\r\n      dispatch(postCommentFailure());\r\n    }\r\n  };\r\n};\r\nexport { getAskQuestions, updateRecommendation, postComment };\r\n","E:\\product-hunt\\src\\Components\\Ask\\QuestionCard.jsx",["229"],"import React from \"react\";\r\nimport styles from \"./QuestionCard.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst QuestionCard = ({\r\n  id,\r\n  about,\r\n  title,\r\n  description,\r\n  imageUrl,\r\n  name,\r\n  recommendations,\r\n}) => {\r\n  const history = useHistory();\r\n  const handleClick = () => {\r\n    history.push(`/ask/${id}`);\r\n  };\r\n  return (\r\n    <div className={styles.QuestionCard}>\r\n      <div className={styles.QuestionCard__header}>\r\n        <img src={imageUrl} alt=\"image\" />\r\n        <h4>{name}</h4>\r\n        <p>{about}</p>\r\n      </div>\r\n      <h3 onClick={handleClick}>{title}</h3>\r\n      <p>{description}</p>\r\n      <div className={styles.QuestionCard__footer}>\r\n        <p>{recommendations.length} RECOMMENDED</p>\r\n     \r\n        <button>FOLLOW</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n","E:\\product-hunt\\src\\AuthContextProvider.js",[],"E:\\product-hunt\\src\\Redux\\operations\\operationsReducer.js",[],"E:\\product-hunt\\src\\Redux\\operations\\actionTypes.js",[],"E:\\product-hunt\\src\\Redux\\operations\\actions.js",[],"E:\\product-hunt\\src\\Components\\Product\\CommentsSection.jsx",["230","231","232","233","234"],"import React, { createElement } from 'react';\r\nimport { Comment , Tooltip , Avatar } from 'antd'\r\nimport {  CaretUpFilled, CaretUpOutlined } from '@ant-design/icons';\r\nimport styles from './CommentsSection.module.css'\r\nimport 'antd/dist/antd.css'\r\n\r\nfunction CommentsSection(props) {\r\n    const { commentID , userImage , userName , userComment , commentUpvotes } = props \r\n\r\n    \r\n  \r\n    const actions = [\r\n      // <CaretUpFilled />,\r\n      // <CaretUpOutlined/>    \r\n    ];\r\n  \r\n    return (\r\n      <Comment\r\n        key={commentID}\r\n        className={styles.CommentsSection}\r\n        actions={actions}\r\n        author={userName}\r\n        children={<Comment\r\n            className={styles.CommentsSection}\r\n            actions={actions}\r\n            author={\"Han Solo\"}\r\n            avatar={\r\n                <Avatar\r\n                  src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                  alt=\"Han Solo\"\r\n                />\r\n              }\r\n            content={\r\n                <p>\r\n                  {userComment}\r\n                </p>\r\n              }\r\n            />\r\n            }\r\n        avatar={\r\n          <Avatar\r\n            src={userImage}\r\n            alt=\"Han Solo\"\r\n          />\r\n        }\r\n        \r\n        content={\r\n          <p>\r\n           {userComment}\r\n          </p>\r\n        }\r\n      />\r\n    );\r\n}\r\n\r\nexport default CommentsSection\r\n","E:\\product-hunt\\src\\Components\\MyJobs\\MyJobs.jsx",["235","236","237"],"import React from \"react\";\r\nimport styles from \"./MyJobs.module.css\";\r\nimport { useSelector, useDispatch } from \"react-router-dom\";\r\nconst MyJobs = () => {\r\n  React.useEffect(() => {}, []);\r\n  return <div>My Jobs</div>;\r\n};\r\n\r\nexport default MyJobs;\r\n","E:\\product-hunt\\src\\Components\\Ask\\Comments.jsx",["238"],"import React from \"react\";\r\nimport styles from \"./Comments.module.css\";\r\nimport SingleComment from \"./SingleComment\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { postComment } from \"../../Redux/ask/actions\";\r\nimport { AuthContext } from \"../../AuthContextProvider\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst Comments = ({ questionId,allComments }) => {\r\n  const currentUser = useSelector((state) => state.authReducer.currentUser);\r\n // console.log(\"current user:\", currentUser);\r\n  const { isOpen, setIsOpen } = React.useContext(AuthContext);\r\n  const [commentText, setCommentText] = React.useState(\"\");\r\n  const renderComments = () => {\r\n    if (allComments.length === 0) {\r\n      return <h3>No Comments Yet.</h3>;\r\n    }\r\n    return allComments.map((comment) => {\r\n      return <SingleComment key={comment.id} {...comment} />;\r\n    });\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const handleCommentPost = () => {\r\n    if (!currentUser) {\r\n      setIsOpen(true);\r\n      return;\r\n    }\r\n    if (commentText === \"\") {\r\n      alert(\"Please enter some text!\");\r\n      return;\r\n    }\r\n    const updatedComments = [\r\n      ...allComments,\r\n      { id: uuid(), text: commentText, email: currentUser.email, upvotes: 0 },\r\n    ];\r\n    // console.log(\"updated comments:\",updatedComments);\r\n    //dispatch\r\n    dispatch(postComment(questionId,updatedComments));\r\n    setCommentText(\"\");\r\n  };\r\n  return (\r\n    <div className={styles.Comments}>\r\n      <div className={styles.PostComment}>\r\n        <input\r\n          type=\"text\"\r\n          value={commentText}\r\n          onChange={(e) => setCommentText(e.target.value)}\r\n          placeholder=\"add comment here...\"\r\n        />\r\n        <button onClick={handleCommentPost}>POST</button>\r\n      </div>\r\n      <div className={styles.Comments__AllComments}>{renderComments()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","E:\\product-hunt\\src\\Components\\Ask\\SingleComment.jsx",[],["239","240"],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":32,"column":7,"nodeType":"247","messageId":"248","endLine":32,"endColumn":18},{"ruleId":"245","severity":1,"message":"249","line":6,"column":19,"nodeType":"247","messageId":"248","endLine":6,"endColumn":29},{"ruleId":"250","severity":1,"message":"251","line":90,"column":7,"nodeType":"252","endLine":90,"endColumn":9,"suggestions":"253"},{"ruleId":"245","severity":1,"message":"254","line":5,"column":23,"nodeType":"247","messageId":"248","endLine":5,"endColumn":34},{"ruleId":"255","severity":1,"message":"256","line":14,"column":31,"nodeType":"257","messageId":"258","endLine":14,"endColumn":33},{"ruleId":"259","severity":1,"message":"260","line":34,"column":15,"nodeType":"261","endLine":34,"endColumn":65},{"ruleId":"250","severity":1,"message":"262","line":45,"column":7,"nodeType":"252","endLine":45,"endColumn":19,"suggestions":"263"},{"ruleId":"250","severity":1,"message":"264","line":65,"column":7,"nodeType":"252","endLine":65,"endColumn":20,"suggestions":"265"},{"ruleId":"245","severity":1,"message":"266","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":22},{"ruleId":"245","severity":1,"message":"267","line":7,"column":9,"nodeType":"247","messageId":"248","endLine":7,"endColumn":18},{"ruleId":"245","severity":1,"message":"268","line":8,"column":9,"nodeType":"247","messageId":"248","endLine":8,"endColumn":16},{"ruleId":"241","replacedBy":"269"},{"ruleId":"243","replacedBy":"270"},{"ruleId":"245","severity":1,"message":"271","line":11,"column":7,"nodeType":"247","messageId":"248","endLine":11,"endColumn":17},{"ruleId":"245","severity":1,"message":"246","line":12,"column":7,"nodeType":"247","messageId":"248","endLine":12,"endColumn":18},{"ruleId":"245","severity":1,"message":"272","line":14,"column":9,"nodeType":"247","messageId":"248","endLine":14,"endColumn":16},{"ruleId":"245","severity":1,"message":"273","line":37,"column":11,"nodeType":"247","messageId":"248","endLine":37,"endColumn":17},{"ruleId":"250","severity":1,"message":"264","line":47,"column":6,"nodeType":"252","endLine":47,"endColumn":19,"suggestions":"274"},{"ruleId":"250","severity":1,"message":"251","line":99,"column":6,"nodeType":"252","endLine":99,"endColumn":15,"suggestions":"275"},{"ruleId":"245","severity":1,"message":"276","line":6,"column":30,"nodeType":"247","messageId":"248","endLine":6,"endColumn":35},{"ruleId":"250","severity":1,"message":"277","line":18,"column":6,"nodeType":"252","endLine":18,"endColumn":8,"suggestions":"278"},{"ruleId":"245","severity":1,"message":"279","line":24,"column":11,"nodeType":"247","messageId":"248","endLine":24,"endColumn":30},{"ruleId":"245","severity":1,"message":"273","line":33,"column":11,"nodeType":"247","messageId":"248","endLine":33,"endColumn":17},{"ruleId":"259","severity":1,"message":"260","line":26,"column":13,"nodeType":"261","endLine":29,"endColumn":15},{"ruleId":"259","severity":1,"message":"260","line":36,"column":13,"nodeType":"261","endLine":39,"endColumn":15},{"ruleId":"259","severity":1,"message":"260","line":46,"column":13,"nodeType":"261","endLine":49,"endColumn":15},{"ruleId":"259","severity":1,"message":"260","line":56,"column":13,"nodeType":"261","endLine":59,"endColumn":15},{"ruleId":"245","severity":1,"message":"254","line":3,"column":23,"nodeType":"247","messageId":"248","endLine":3,"endColumn":34},{"ruleId":"255","severity":1,"message":"256","line":8,"column":29,"nodeType":"257","messageId":"258","endLine":8,"endColumn":31},{"ruleId":"280","severity":1,"message":"281","line":16,"column":11,"nodeType":"261","endLine":16,"endColumn":15},{"ruleId":"250","severity":1,"message":"282","line":12,"column":6,"nodeType":"252","endLine":12,"endColumn":8,"suggestions":"283"},{"ruleId":"245","severity":1,"message":"284","line":76,"column":13,"nodeType":"247","messageId":"248","endLine":76,"endColumn":21},{"ruleId":"245","severity":1,"message":"284","line":115,"column":13,"nodeType":"247","messageId":"248","endLine":115,"endColumn":21},{"ruleId":"259","severity":1,"message":"260","line":20,"column":9,"nodeType":"261","endLine":20,"endColumn":43},{"ruleId":"245","severity":1,"message":"285","line":1,"column":17,"nodeType":"247","messageId":"248","endLine":1,"endColumn":30},{"ruleId":"245","severity":1,"message":"286","line":2,"column":20,"nodeType":"247","messageId":"248","endLine":2,"endColumn":27},{"ruleId":"245","severity":1,"message":"287","line":3,"column":11,"nodeType":"247","messageId":"248","endLine":3,"endColumn":24},{"ruleId":"245","severity":1,"message":"288","line":3,"column":26,"nodeType":"247","messageId":"248","endLine":3,"endColumn":41},{"ruleId":"245","severity":1,"message":"289","line":8,"column":62,"nodeType":"247","messageId":"248","endLine":8,"endColumn":76},{"ruleId":"245","severity":1,"message":"290","line":2,"column":8,"nodeType":"247","messageId":"248","endLine":2,"endColumn":14},{"ruleId":"245","severity":1,"message":"291","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":21},{"ruleId":"245","severity":1,"message":"254","line":3,"column":23,"nodeType":"247","messageId":"248","endLine":3,"endColumn":34},{"ruleId":"245","severity":1,"message":"273","line":11,"column":11,"nodeType":"247","messageId":"248","endLine":11,"endColumn":17},{"ruleId":"241","replacedBy":"292"},{"ruleId":"243","replacedBy":"293"},"no-native-reassign",["294"],"no-negated-in-lhs",["295"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","'setProduct' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'getBestDealsHandler', 'getOlderProductsHandler', 'getTodayProducts', and 'getUpcomingProductsHandler'. Either include them or remove the dependency array.","ArrayExpression",["296"],"'useDispatch' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook React.useEffect has a missing dependency: 'getSoloDataHandler'. Either include it or remove the dependency array.",["297"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'isLoggedIn'. Either include them or remove the dependency array.",["298"],"'shallowEqual' is defined but never used.","'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.",["294"],["295"],"'isLoggedIn' is assigned a value but never used.","'history' is assigned a value but never used.","'isOpen' is assigned a value but never used.",["299"],["300"],"'image' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'allProducts'. Either include it or remove the dependency array.",["301"],"'newFilteredProducts' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["302"],"'response' is assigned a value but never used.","'createElement' is defined but never used.","'Tooltip' is defined but never used.","'CaretUpFilled' is defined but never used.","'CaretUpOutlined' is defined but never used.","'commentUpvotes' is assigned a value but never used.","'styles' is defined but never used.","'useSelector' is defined but never used.",["294"],["295"],"no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"307","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [getBestDealsHandler, getOlderProductsHandler, getTodayProducts, getUpcomingProductsHandler]",{"range":"316","text":"317"},"Update the dependencies array to be: [getSoloDataHandler, id, trigger]",{"range":"318","text":"319"},"Update the dependencies array to be: [currentUser, dispatch, isLoggedIn]",{"range":"320","text":"321"},{"range":"322","text":"321"},"Update the dependencies array to be: [getBestDealsHandler, getOlderProductsHandler, getTodayProducts, getUpcomingProductsHandler, trigger]",{"range":"323","text":"324"},"Update the dependencies array to be: [allProducts]",{"range":"325","text":"326"},"Update the dependencies array to be: [dispatch]",{"range":"327","text":"328"},[2691,2693],"[getBestDealsHandler, getOlderProductsHandler, getTodayProducts, getUpcomingProductsHandler]",[1877,1889],"[getSoloDataHandler, id, trigger]",[2367,2380],"[currentUser, dispatch, isLoggedIn]",[1313,1326],[3123,3132],"[getBestDealsHandler, getOlderProductsHandler, getTodayProducts, getUpcomingProductsHandler, trigger]",[840,842],"[allProducts]",[486,488],"[dispatch]"]