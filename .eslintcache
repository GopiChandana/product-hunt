[{"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\index.js":"1","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\App.js":"2","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\AuthContextProvider.js":"3","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\store.js":"4","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Routes\\Routes.js":"5","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\products\\productsReducer.js":"6","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\jobs\\reducer.js":"7","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\auth\\authReducer.js":"8","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\operations\\operationsReducer.js":"9","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\ask\\askReducer.js":"10","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Navbar\\Navbar.jsx":"11","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\products\\actionTypes.js":"12","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\jobs\\actionTypes.js":"13","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\operations\\actionTypes.js":"14","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\auth\\actionTypes.js":"15","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\ask\\actionTypes.js":"16","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\auth\\actions.js":"17","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Deals\\Deals.jsx":"18","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Product\\ProductModal.jsx":"19","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Mentors\\Mentors.jsx":"20","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Product\\Product.jsx":"21","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\Ask.jsx":"22","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\AskPage.jsx":"23","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Discussions\\Discussions.jsx":"24","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Jobs\\Jobs.jsx":"25","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Auth\\AuthModal.jsx":"26","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\products\\actions.js":"27","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\operations\\actions.js":"28","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\jobs\\action.js":"29","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Product\\SideCard.jsx":"30","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\AskHeader.jsx":"31","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Product\\ProductCard.jsx":"32","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Product\\CommentsSection.jsx":"33","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\RightSidebar.jsx":"34","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\LeftSidebar.jsx":"35","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\Content.jsx":"36","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\ProductSidebar.jsx":"37","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\Recommendation.jsx":"38","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\ask\\actions.js":"39","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\QuestionCard.jsx":"40","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Discussions\\PatchComment.jsx":"41","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\discussions\\actions.js":"42","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\discussions\\actionTypes.js":"43","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\discussions\\discussiosReducer.js":"44","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Discussions\\Comments.jsx":"45"},{"size":522,"mtime":1612444842095,"results":"46","hashOfConfig":"47"},{"size":305,"mtime":1612444842010,"results":"48","hashOfConfig":"47"},{"size":348,"mtime":1612444842013,"results":"49","hashOfConfig":"47"},{"size":982,"mtime":1612456602106,"results":"50","hashOfConfig":"47"},{"size":1325,"mtime":1612444842093,"results":"51","hashOfConfig":"47"},{"size":3580,"mtime":1612444842090,"results":"52","hashOfConfig":"47"},{"size":4472,"mtime":1612444842082,"results":"53","hashOfConfig":"47"},{"size":1062,"mtime":1612444842079,"results":"54","hashOfConfig":"47"},{"size":995,"mtime":1612444842086,"results":"55","hashOfConfig":"47"},{"size":1117,"mtime":1612444842075,"results":"56","hashOfConfig":"47"},{"size":2917,"mtime":1612444842056,"results":"57","hashOfConfig":"47"},{"size":1177,"mtime":1612444842088,"results":"58","hashOfConfig":"47"},{"size":1202,"mtime":1612444842081,"results":"59","hashOfConfig":"47"},{"size":228,"mtime":1612444842084,"results":"60","hashOfConfig":"47"},{"size":290,"mtime":1612444842076,"results":"61","hashOfConfig":"47"},{"size":676,"mtime":1612444842073,"results":"62","hashOfConfig":"47"},{"size":1408,"mtime":1612444842078,"results":"63","hashOfConfig":"47"},{"size":2551,"mtime":1612444842042,"results":"64","hashOfConfig":"47"},{"size":15392,"mtime":1612444842066,"results":"65","hashOfConfig":"47"},{"size":18916,"mtime":1612444842053,"results":"66","hashOfConfig":"47"},{"size":9107,"mtime":1612444842061,"results":"67","hashOfConfig":"47"},{"size":564,"mtime":1612444842016,"results":"68","hashOfConfig":"47"},{"size":1927,"mtime":1612444842023,"results":"69","hashOfConfig":"47"},{"size":9954,"mtime":1612508538299,"results":"70","hashOfConfig":"47"},{"size":6405,"mtime":1612444842050,"results":"71","hashOfConfig":"47"},{"size":2661,"mtime":1612444842040,"results":"72","hashOfConfig":"47"},{"size":4578,"mtime":1612444842089,"results":"73","hashOfConfig":"47"},{"size":2775,"mtime":1612444842085,"results":"74","hashOfConfig":"47"},{"size":9368,"mtime":1612444842080,"results":"75","hashOfConfig":"47"},{"size":1094,"mtime":1612444842068,"results":"76","hashOfConfig":"47"},{"size":317,"mtime":1612444842020,"results":"77","hashOfConfig":"47"},{"size":4347,"mtime":1612444842065,"results":"78","hashOfConfig":"47"},{"size":1401,"mtime":1612454403196,"results":"79","hashOfConfig":"47"},{"size":2176,"mtime":1612444842037,"results":"80","hashOfConfig":"47"},{"size":592,"mtime":1612444842027,"results":"81","hashOfConfig":"47"},{"size":1015,"mtime":1612444842026,"results":"82","hashOfConfig":"47"},{"size":2908,"mtime":1612444842029,"results":"83","hashOfConfig":"47"},{"size":1177,"mtime":1612444842034,"results":"84","hashOfConfig":"47"},{"size":2490,"mtime":1612444842074,"results":"85","hashOfConfig":"47"},{"size":843,"mtime":1612444842031,"results":"86","hashOfConfig":"47"},{"size":782,"mtime":1612461032721,"results":"87","hashOfConfig":"47"},{"size":1170,"mtime":1612492301330,"results":"88","hashOfConfig":"47"},{"size":244,"mtime":1612492356921,"results":"89","hashOfConfig":"47"},{"size":771,"mtime":1612456176868,"results":"90","hashOfConfig":"47"},{"size":1236,"mtime":1612462574868,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"c381h3",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\index.js",[],["199","200"],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\App.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\AuthContextProvider.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\store.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Routes\\Routes.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\products\\productsReducer.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\jobs\\reducer.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\auth\\authReducer.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\operations\\operationsReducer.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\ask\\askReducer.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Navbar\\Navbar.jsx",["201"],"import React from \"react\";\r\nimport styles from \"./Navbar.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthModal from \"../Auth/AuthModal\";\r\nimport Modal from \"react-modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { logout } from \"../../Redux/auth/actions\";\r\nimport { AuthContext } from \"../../AuthContextProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nModal.setAppElement(\"#root\");\r\nconst Navbar = () => {\r\n  // const [isOpen, setIsOpen] = React.useState(false);\r\n  const { isOpen, setIsOpen } = React.useContext(AuthContext);\r\n  const location = useLocation().pathname;\r\n  const history = useHistory();\r\n  const style = location.includes(\"founder-club/benefits\")\r\n    ? {\r\n        backgroundColor: \"#16161D\",\r\n        borderBottom: \"0.5px solid rgba(216, 210, 210, 0.2)\",\r\n      }\r\n    : {};\r\n  const inputStyle = location.includes(\"founder-club/benefits\")\r\n    ? { backgroundColor: \"black\", color: \"white\", border: \"none\" }\r\n    : {};\r\n\r\n  let isLoggedIn = useSelector((state) => state.authReducer.isLoggedIn);\r\n\r\n  let currentUser = useSelector((state) => state.authReducer.currentUser);\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Navbar} style={style}>\r\n      <div>\r\n        <div className={styles.Navbar__logo}>\r\n          <Link to=\"/\">\r\n            <div>\r\n              <h1>P</h1>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className={styles.Navbar__searchBar} style={inputStyle}>\r\n          <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n          <input\r\n            placeholder=\"Discover your next favourite thing...\"\r\n            type=\"text\"\r\n            style={inputStyle}\r\n          />\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/ask\">Ask</Link>\r\n          </li>\r\n\r\n          <li>\r\n            <Link to=\"/jobs\">Jobs</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/discussions\">Discussions</Link>\r\n          </li>\r\n\r\n          <li>\r\n            <Link to=\"/mentors\">Mentors</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/founder-club/benefits\">Deals</Link>\r\n          </li>\r\n          <i className=\"fas fa-ellipsis-h\"></i>\r\n        </ul>\r\n        {!isLoggedIn ? (\r\n          <div className={styles.Navbar__buttons}>\r\n            <button onClick={() => setIsOpen(true)}>LOG IN</button>\r\n            <button>SIGN UP</button>\r\n          </div>\r\n        ) : (\r\n          <div className={styles.Navbar__buttons}>\r\n            <button className={styles.Navbar__logoutbtn} onClick={handleLogout}>\r\n              LOG OUT\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <AuthModal isOpen={isOpen} setIsOpen={setIsOpen} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\products\\actionTypes.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\jobs\\actionTypes.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\operations\\actionTypes.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\auth\\actionTypes.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\ask\\actionTypes.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\auth\\actions.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Deals\\Deals.jsx",["202"],"import React from \"react\";\r\nimport styles from \"./Deals.module.css\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Deals = () => {\r\n  const [product, setProduct] = React.useState({\r\n    name: \"Founder Club Membership\",\r\n    price: 799,\r\n  });\r\n  const history = useHistory();\r\n  const makePayment = (token) => {\r\n    const body = {\r\n      token,\r\n      product,\r\n    };\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    return fetch(`http://localhost:8282/payment`, {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((response) => {\r\n        console.log(\"RESPONSE \", response);\r\n        const { status } = response;\r\n        alert(\"Congrtulation!! You are now a FOUNDER CLUB MEMBER\");\r\n        console.log(\"STATUS \", status);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  return (\r\n    <div className={styles.Deals}>\r\n      <div className={styles.Deals__banner}>\r\n        <div className={styles.Deals__bannerEmoji}>✨</div>\r\n        <div className={styles.Deals__bannerHeader}>\r\n          <h1>Founder Club</h1>\r\n          <p>\r\n            Your access to big savings on tools that help kick start your\r\n            business. Join now for access to >$100,000 in savings for only$60/mo\r\n          </p>\r\n        </div>\r\n        <div className={styles.Deals__bannerJoin}>\r\n          <StripeCheckout\r\n            stripeKey=\"pk_test_yUCJVPDmx1rlsgHAGtdqGkzw\"\r\n            token={makePayment}\r\n            name={`Founder Club @$${product.price}`}\r\n            amount={product.price * 100}\r\n            // shippingAddress\r\n            // billingAddress\r\n          >\r\n            <button>JOIN FOUNDER CLUB</button>\r\n          </StripeCheckout>\r\n          {/* <button>JOIN FOUNDER CLUB</button> */}\r\n          <p>Got an invite code?</p>\r\n        </div>\r\n        <div className={styles.Deals__bannerSort}>\r\n          <p>Sort by:</p>\r\n          <select>\r\n            <option value=\"\">Recommended</option>\r\n            <option value=\"\">Most Popular</option>\r\n            <option value=\"\">Newest</option>\r\n          </select>\r\n          <div className={styles.Deals__bannerSort__Search}>\r\n            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n            <input\r\n              placeholder=\"Discover your next favourite thing...\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deals;\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Product\\ProductModal.jsx",["203","204"],"import React from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport {  getRelatedProducts, getSoloProduct } from '../../Redux/products/actions'\r\nimport styles from './ProductModal.module.css'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport SideCard from './SideCard'\r\nimport { FacebookShareButton , TwitterShareButton } from 'react-share'\r\nimport { findCurrentUserCollections, findCurrentUserUpvotes, getAllUsersAuthData, postNewComments, updateCollections, updateUpvotes, upVoteCounter } from '../../Redux/operations/actions'\r\nimport CommentsSection from './CommentsSection'\r\nimport { Button, Input } from 'antd';\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nfunction ProductModal() {\r\n    let { id } = useParams()\r\n    const dispatch = useDispatch()\r\n    const soloData = useSelector(state => state.productsReducer.soloData)\r\n    const relatedProductData = useSelector(state => state.productsReducer.relatedProductsData)\r\n    const upvoted = useSelector(state => state.operationsReducer.upvotes)\r\n    const isLoggedIn = useSelector(state => state.authReducer.isLoggedIn)\r\n    const history = useHistory()\r\n    const [ showNav , setShowNav ] = React.useState(false)\r\n    const currentUser = useSelector(state => state.authReducer.currentUser)\r\n    const [ trigger , setTrigger ] = React.useState(false)\r\n    const collectionsOfUser = useSelector(state => state.operationsReducer.collection)\r\n    const [ newComment , setNewComment ] = React.useState(\"\")\r\n\r\n    const handleShowNav = () => {\r\n        if (window.pageYOffset >= 350){\r\n            setShowNav(true)\r\n        } \r\n        else{\r\n            setShowNav(false)\r\n        }\r\n    };\r\n    \r\n    window.addEventListener('scroll', handleShowNav)\r\n\r\n\r\n    const modalToggleHandler = () =>{\r\n        history.push(\"/\")\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        getSoloDataHandler()\r\n    },[id,trigger])\r\n\r\n    const getSoloDataHandler = () => {\r\n        const action = getSoloProduct(id)\r\n        dispatch(action)\r\n        .then(res =>  getRelatedProductsHandler(res.categories))\r\n    }\r\n\r\n\r\n\r\n    const getRelatedProductsHandler = (categories) => {\r\n        const action = getRelatedProducts(categories)\r\n        dispatch(action)\r\n    }\r\n\r\n  \r\n    React.useEffect(()=>{\r\n        if(isLoggedIn){\r\n            dispatch(findCurrentUserUpvotes(currentUser.email))\r\n        }\r\n    },[currentUser])\r\n\r\n\r\n    let { logo , name , tagline , categories , upvotes , description , developer , video , productDiscussion } = soloData\r\n\r\n\r\n    //upvoting and downvoting products\r\n    \r\n    const productUpvoteHandler = () =>{\r\n        if(!isLoggedIn){\r\n            alert(\"You need to login\")\r\n            return\r\n        }\r\n        dispatch(getAllUsersAuthData({\r\n            email : currentUser.email\r\n        }))\r\n        .then((res) => {\r\n            if(res.data === undefined){\r\n                const upvoted = []\r\n                upvoted.push(Number(id))\r\n                dispatch(updateUpvotes(upvoted , res.id , currentUser.email))\r\n                 .then(res => dispatch(findCurrentUserUpvotes(currentUser.email)))\r\n                 .then(res => dispatch(upVoteCounter({upvotes : upvotes + 1} , id))\r\n                               .then(res=> setTrigger(!trigger))  \r\n                 )     \r\n            }\r\n            else{\r\n                const findExistence = res.data.find(item => item === Number(id))\r\n                if(findExistence === undefined){\r\n                    const updatedUpVotes = [...res.data , Number(id) ]\r\n                    dispatch(updateUpvotes(updatedUpVotes , res.id , currentUser.email)) \r\n                     .then(res => dispatch(findCurrentUserUpvotes(currentUser.email)))    \r\n                     .then(res => dispatch(upVoteCounter({upvotes : upvotes + 1} , id))\r\n                     .then(res=> setTrigger(!trigger))  \r\n                    )                    \r\n                }\r\n                else{\r\n                    const updatedUpVotes = res.data.filter(item => item !== Number(id))\r\n                    dispatch(updateUpvotes(updatedUpVotes , res.id , currentUser.email)) \r\n                     .then(res => dispatch(findCurrentUserUpvotes(currentUser.email)))  \r\n                     .then(res => dispatch(upVoteCounter({upvotes : upvotes - 1} , id))\r\n                     .then(res=> setTrigger(!trigger))  \r\n                    )   \r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    // adding products to personal collection\r\n\r\n    const productCollectionHandler = () =>{\r\n        if(!isLoggedIn){\r\n            alert(\"You need to login\")\r\n            return\r\n        }\r\n        dispatch(getAllUsersAuthData({\r\n            email : currentUser.email\r\n        }))\r\n        .then((res) => {\r\n            if(res.collectionData === undefined){\r\n                const collection = []\r\n                collection.push(Number(id))\r\n                dispatch(updateCollections(collection , res.id ))\r\n                 .then(res => dispatch(findCurrentUserCollections(currentUser.email)))   \r\n            }\r\n            else{\r\n                const findExistence = res.collectionData.find(item => item === Number(id))\r\n                if(findExistence === undefined){\r\n                    const updatedCollection = [...res.collectionData , Number(id) ]\r\n                    dispatch(updateCollections(updatedCollection , res.id , currentUser.email)) \r\n                     .then(res => dispatch(findCurrentUserCollections(currentUser.email)))                    \r\n                }\r\n                else{\r\n                    const updatedCollection = res.collectionData.filter(item => item !== Number(id))\r\n                    dispatch(updateCollections(updatedCollection , res.id , currentUser.email)) \r\n                     .then(res => dispatch(findCurrentUserCollections(currentUser.email)))   \r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const newCommentHandler = () =>{\r\n    productDiscussion = [...productDiscussion ,  {\r\n        commentID : uuid(),\r\n        userImage : currentUser.imageUrl, \r\n        userName :currentUser.name,\r\n        userComment : newComment ,\r\n        commentUpvotes : 0\r\n    } ]\r\n      dispatch(postNewComments(id , productDiscussion))\r\n     .then(res =>{setTrigger(!trigger)})\r\n    }     \r\n    \r\n    \r\n\r\n    return (\r\n        <div className={styles.ProductModal}>\r\n            <div className={styles.ProductModal__main}>\r\n              <div className={styles.ProductModal__main__head}>\r\n                <div className={styles.ProductModal__main__head__info}>\r\n                    <div>\r\n                        <img src={logo} alt=\"logo\"></img>\r\n                    </div>\r\n                    <div>\r\n                        <h2>{name}</h2>\r\n                        <p>{tagline}</p>\r\n                        <div className={styles.ProductModal__main__head__info__categories}>\r\n                                <div><button>{categories}</button></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.ProductModal__main__head__rank}>\r\n                    {/* <h1>Rank</h1> */}\r\n                </div>\r\n              </div>\r\n              <div className={styles.ProductModal__main__content}>\r\n                <div className={styles.ProductModal__main__content__demo}>\r\n                    <div className={styles.ProductModal__main__content__demo__video}>\r\n                        <div>\r\n                            <iframe type=\"text/html\" title = {id} width=\"673\" height=\"380\" src={video} alt=\"404 Not Found\" allowFullScreen></iframe>\r\n                        </div>\r\n                        <div className={styles.ProductModal__main__content__demo__video__description} >\r\n                            <p>{description}</p>\r\n                        </div>\r\n                        <div className={styles.ProductModal__main__content__demo__video__footer}>\r\n                            <div>\r\n                                <div className={styles.Twitter}>\r\n                                    <TwitterShareButton url={window.location.href}>\r\n                                     <button > <i className=\"fab fa-twitter\"></i> Tweet</button>\r\n                                    </TwitterShareButton>\r\n                                </div>\r\n                                <div className={styles.Facebook}>\r\n                                    <FacebookShareButton url={window.location.href}>\r\n                                        <button> <i className=\"fab fa-facebook-f\"></i> Share</button>\r\n                                    </FacebookShareButton>\r\n                                </div>\r\n                                <div>\r\n                                    <button> <i className=\"fas fa-code\"></i> Embed</button>\r\n                                </div>\r\n                                <div>\r\n                                    <button \r\n                                        style={collectionsOfUser?.find(item => item === Number(id)) !== undefined && isLoggedIn ? {border:\"1px solid rgb(173, 84, 0)\" ,borderRadius: \"3px\", color: \"white\" , backgroundColor: \"orange\"} : {}} \r\n                                        onClick={()=>productCollectionHandler()} >\r\n                                        <i className=\"far fa-plus-square\"></i> \r\n                                        {collectionsOfUser?.find(item => item === Number(id)) !== undefined && isLoggedIn ?  \"Collected\" :  \"Collect\"}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <button>Featured 11 hour ago</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.ProductModal__main__content__demo__discussion}>\r\n                        <h1>Discussion</h1>\r\n                        <div className={styles.ProductModal__main__content__demo__discussion__comments}>\r\n                           <div>\r\n                            {productDiscussion?.map( item => (\r\n                                    <CommentsSection {...item} />\r\n                                ))}\r\n                           </div>\r\n                           {isLoggedIn ? \r\n                            <div style={{display:\"flex\"}}>   \r\n                              <Input value={newComment} onChange={(e)=>setNewComment(e.target.value)} bordered=\"false\" allowClear ></Input>\r\n                              <Button onClick={newCommentHandler}>Comment</Button>\r\n                            </div>\r\n                           :  \r\n                           <div style={{display:\"flex\"}}>   \r\n                                <Input disabled value={newComment} onChange={(e)=>setNewComment(e.target.value)} bordered=\"false\" allowClear ></Input>\r\n                                <Button disabled onClick={newCommentHandler}>Comment</Button>\r\n                           </div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.ProductModal__main__content__side}>\r\n                    <div className={styles.ProductModal__main__content__side__head}>\r\n                        <div>\r\n                            <button className={styles.button__light}>\r\n                                GET IT\r\n                            </button>\r\n                            <button onClick={()=>productUpvoteHandler()} \r\n                                style={upvoted?.find(item => item === Number(id)) !== undefined && isLoggedIn ? {border:\"1px solid rgb(173, 84, 0)\" , backgroundColor:\"white\", color:\"rgb(173, 84, 0)\"} : {}} className={styles.button__dark}>\r\n                                <i className=\"fas fa-caret-up\"></i> UPVOTE {upvotes}\r\n                            </button>\r\n                        </div>\r\n                        <div className={styles.ProductModal__main__content__side__head__upvoters}>\r\n                            {\r\n                              new Array(14).fill(0).map((_,index)=>(\r\n                                <div key={index+1}>\r\n                                    <img src={`https://i.pravatar.cc/150?img=${index+1}`} alt=\"voters\"></img>\r\n                                </div>\r\n                              ))   \r\n                            }     \r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.ProductModal__main__content__side__contributors}>\r\n                        <div>\r\n                            <b>Developer</b>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <img src=\"https://i.pravatar.cc/150?img\" alt=\"voters\"></img>    \r\n                            </div>\r\n                            <div>\r\n                                <p>{developer}</p>\r\n                                <span>@{developer}</span> \r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                    <div className={styles.ProductModal__main__content__side__related}>\r\n                        <div>\r\n                            <b>Related Products</b>\r\n                        </div>\r\n                        <div className={styles.Product__sideModal__main__content__side__cards}>\r\n                            {relatedProductData?.filter((_,index) => index < 6 ).map( item => (\r\n                                <SideCard key={item.id} {...item}></SideCard>\r\n                            ))}\r\n                         </div> \r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div onClick={modalToggleHandler} className={styles.ProductModal__close}>\r\n                <i class=\"fas fa-times-circle\"></i>\r\n            </div>\r\n            { showNav && <div className={styles.ScrollNav__parent}>\r\n                <div className = {styles.ScrollNav}>\r\n                <div className={styles.ScrollNav__right}>\r\n                        <div>\r\n                            <img src={logo} alt=\"logo\"></img>\r\n                        </div>\r\n                        <div>\r\n                            <h2>{name}</h2>\r\n                            <p>{tagline}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={styles.ScrollNav__left}>\r\n                            <div>\r\n                                <button className={styles.button__light}>\r\n                                    GET IT\r\n                                </button>\r\n                            </div>\r\n                            <div>\r\n                                <button onClick={()=>productUpvoteHandler()} \r\n                                style={upvoted?.find(item => item === Number(id)) !== undefined && isLoggedIn ? {border:\"1px solid rgb(173, 84, 0)\" , backgroundColor:\"white\", color:\"rgb(173, 84, 0)\"} : {}} className={styles.button__dark}>\r\n                                <i className=\"fas fa-caret-up\"></i> UPVOTE {upvotes}\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductModal\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Mentors\\Mentors.jsx",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Product\\Product.jsx",["205"],"import React from 'react'\r\nimport styles from './Product.module.css'\r\nimport { useSelector , useDispatch } from 'react-redux'\r\nimport { getBestProducts, getOlderProducts, getProducts, getUpcomingProducts } from '../../Redux/products/actions'\r\nimport ProductCard from './ProductCard'\r\nimport SideCard from './SideCard'\r\n \r\n\r\n \r\nfunction Product() {\r\n   const productData = useSelector ( state => state.productsReducer.productData)\r\n   const upcomingProductsData = useSelector ( state => state.productsReducer.upcomingProductsData)\r\n   const olderProductsData = useSelector ( state => state.productsReducer.olderProductsData)\r\n   const bestDealsData = useSelector ( state => state.productsReducer.bestDealsData)\r\n   const [ showMore , setShowMore ] = React.useState(false)\r\n   const [ showScroll, setShowScroll ] = React.useState(false)\r\n\r\n   \r\n   const dispatch = useDispatch()  \r\n   \r\n   //scroll to top\r\n    const checkScrollTop = () => {\r\n        if (!showScroll && window.pageYOffset > 400){\r\n        setShowScroll(true)\r\n        } else if (showScroll && window.pageYOffset <= 400){\r\n        setShowScroll(false)\r\n        }\r\n    };\r\n    \r\n    window.addEventListener('scroll', checkScrollTop)\r\n\r\n    const scrollTop = () =>{\r\n        window.scrollTo({top: 0, behavior: 'smooth'});\r\n    };\r\n\r\n    //getting all products\r\n    const getTodayProducts = (params) => {\r\n        if(params === \"popular\"){\r\n            const action = getProducts({\r\n                \"_sort\" : \"upvotes\",\r\n               \"_order\": \"desc\",\r\n               \"status\":\"TODAY\"\r\n            })\r\n            dispatch(action)\r\n        }\r\n        else{\r\n            const action = getProducts({\r\n                \"_sort\" : \"id\",\r\n               \"_order\": \"asc\",\r\n               \"status\":\"TODAY\"\r\n            })\r\n            dispatch(action)\r\n        }\r\n    }\r\n\r\n    \r\n    const getBestDealsHandler = () =>{\r\n        const action = getBestProducts({\r\n            \"_sort\" : \"upvotes\",\r\n            \"_order\": \"desc\",\r\n           \"status\":\"BEST\"\r\n        })\r\n        dispatch(action)\r\n    }\r\n   \r\n    const getOlderProductsHandler = () =>{\r\n        const action = getOlderProducts({\r\n           \"status\":\"PROCESSED\"\r\n        })\r\n        dispatch(action)\r\n    }\r\n\r\n    \r\n    const getUpcomingProductsHandler = () =>{\r\n        const action = getUpcomingProducts({\r\n            \"status\":\"UPCOMING\",\r\n            \"_sort\" : \"id\",\r\n            \"_order\": \"desc\",\r\n            \"_page\": 1,\r\n            \"_limit\": 5,\r\n        })\r\n        dispatch(action)\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        getTodayProducts(\"popular\")\r\n        getBestDealsHandler()\r\n        getOlderProductsHandler()\r\n        getUpcomingProductsHandler()\r\n    },[])\r\n\r\n    const dataHandlers =  { getTodayProducts , getBestDealsHandler , getOlderProductsHandler , getUpcomingProductsHandler }\r\n\r\n    // show more products pagination toggle\r\n    const showMoreHandler = () => {\r\n        setShowMore(!showMore)\r\n    }\r\n    \r\n \r\n    \r\n\r\n    return (\r\n    <div className={styles.Product__Parent}>\r\n        <div className={styles.Product}>\r\n             <div className={styles.Product__main}>\r\n                 <div className={styles.Product__main__head}>\r\n                    <div>\r\n                        <h2>Today</h2>\r\n                    </div>\r\n                    <div>\r\n                        <span onClick={()=>getTodayProducts(\"popular\")}>POPULAR</span> <b>|\r\n                        </b> <span onClick={()=>getTodayProducts(\"newest\")}>NEWEST</span>\r\n                    </div>\r\n                 </div>\r\n                 <div className={styles.Product__main__content}>\r\n                     {!showMore? productData?.filter((_,index) => index < 10)\r\n                     .map( item => (\r\n                          <ProductCard dataHandlers = {dataHandlers}  key={item.id} {...item}></ProductCard>\r\n                     )) :  productData?.map( item => (\r\n                          <ProductCard dataHandlers = {dataHandlers}  key={item.id} {...item}></ProductCard>\r\n                     ))}\r\n                    <div  onClick={showMoreHandler} className={styles.Product__main__content__more}>\r\n                         <i className=\"fas fa-chevron-down\"></i> \r\n                         <button > {showMore ? \"Show Less\" : `Show ${productData.length-10} More`}</button>\r\n                     </div>\r\n                 </div>\r\n                 <br></br>\r\n                 <br></br>\r\n                 <div className={styles.Product__main__head}>\r\n                    <div>\r\n                        <h2>Best Deals</h2>\r\n                    </div>\r\n                 </div>\r\n                 <div className={styles.Product__main__content}>\r\n                    {!showMore? bestDealsData.map( item => (\r\n                          <ProductCard key={item.id}  dataHandlers = {dataHandlers} {...item}></ProductCard>\r\n                     )) :  productData?.map( item => (\r\n                          <ProductCard dataHandlers = {dataHandlers}  key={item.id} {...item}></ProductCard>\r\n                     ))}\r\n                 </div>\r\n                 <br></br>\r\n                 <br></br>\r\n                 <div className={styles.Product__main__head}>\r\n                    <div>\r\n                        <h2>Older</h2>\r\n                    </div>\r\n                 </div>\r\n                 <div className={styles.Product__main__content}>\r\n                    {!showMore? olderProductsData?.filter((_,index) => index < 10)\r\n                     .map( item => (\r\n                          <ProductCard dataHandlers = {dataHandlers}  key={item.id} {...item}></ProductCard>\r\n                     )) :  productData?.map( item => (\r\n                          <ProductCard dataHandlers = {dataHandlers}  key={item.id} {...item}></ProductCard>\r\n                     ))}\r\n                    <div  onClick={showMoreHandler} className={styles.Product__main__content__more}>\r\n                        <i className=\"fas fa-chevron-down\"></i> \r\n                        <button > {showMore ? \"Show Less\" : `Show ${olderProductsData.length-10} More`}</button>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n             <div className={styles.Product__side}>\r\n                <div className={styles.Product__side__awards}>\r\n                        \r\n                </div>\r\n                <div className={styles.Product__side__highlight}>\r\n                    <h2>Upcoming products <span>powered by Masai</span></h2>\r\n                    <div className={styles.Product__side__highlight__cards}>\r\n                        {upcomingProductsData?.map( item => (\r\n                            <SideCard key={item.id} {...item}></SideCard>\r\n                        ))}\r\n                    </div>\r\n                    <div className={styles.Product__side__highlight__button}>\r\n                        <button>View All</button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.Product__side__highlight}>\r\n                    <h2>Hiring Now</h2>\r\n                    <div className={styles.Product__side__highlight__cards}>\r\n                        {productData?.filter((item,index) => index < 3).map( item => (\r\n                            <SideCard key={item.id} {...item}></SideCard>\r\n                        ))}\r\n                    </div>\r\n                    <div className={styles.Product__side__highlight__button}>\r\n                        <button>View All Jobs</button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.Product__side__highlight}>\r\n                    <h2>Top Discussions</h2>\r\n                    <div className={styles.Product__side__highlight__cards}>\r\n                        {productData?.filter((item,index) => index < 4).map( item => (\r\n                            <SideCard key={item.id} {...item}></SideCard>\r\n                        ))}\r\n                    </div>\r\n                    <div className={styles.Product__side__highlight__button}>\r\n                        <button>View More Discussions</button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.FooterMini}>\r\n                     <ul>\r\n                        <li>Blog</li>\r\n                        <li>Newsletter</li>\r\n                        <li>Apps</li>\r\n                        <li>About</li>\r\n                        <li>FAQ</li>\r\n                        <li>Terms</li>\r\n                        <li>Privacy and Cookies</li>\r\n                        <li>Twitter</li>\r\n                        <li>Facebook</li>\r\n                        <li>Instagram</li>\r\n                        <li>Advertise</li>\r\n                    </ul> \r\n                    <div>\r\n                        <p>© 2021 PRODUCT HUNT</p>\r\n                    </div>\r\n                </div>\r\n             </div>\r\n        </div>\r\n        <div className={styles.Product__scroll}>\r\n            <i style={{height: 40, display: showScroll ? 'inline' : 'none'}} onClick={scrollTop} className=\"fas fa-chevron-circle-up\"></i>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\Ask.jsx",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\AskPage.jsx",["206","207","208"],"import React from \"react\";\r\nimport styles from \"./AskPage.module.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ProductSidebar from \"./ProductSidebar\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Recommendation from \"./Recommendation\";\r\nconst AskPage = () => {\r\n  const { id } = useParams();\r\n  const askQuestions = useSelector((state) => state.askReducer.askQuestions);\r\n  const currentQuestion = askQuestions.filter(\r\n    (question) => question.id == id\r\n  )[0];\r\n  const renderRecommendations = () => {\r\n    if (currentQuestion.recommendations.length === 0) {\r\n      return <h4>No Product Recommendations Yet.</h4>;\r\n    }\r\n    return currentQuestion.recommendations.map((recommendation) => (\r\n      <Recommendation key={recommendation.id} {...recommendation} />\r\n    ));\r\n  };\r\n  if (!currentQuestion) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className={styles.AskPage__parent}>\r\n      <div className={styles.AskPage}>\r\n        <div className={styles.AskPage__content}>\r\n          <div className={styles.AskPage__contentHeader}>\r\n            <div className={styles.AskPage__contentHeader__userheader}>\r\n              <img src={currentQuestion.imageUrl} alt=\"image\" />\r\n              <h4>{currentQuestion.name}</h4>\r\n              <p>{currentQuestion.about}</p>\r\n            </div>\r\n            <h3>{currentQuestion.title}</h3>\r\n            <p>{currentQuestion.description}</p>\r\n            <div className={styles.AskPage__contentHeader__footer}>\r\n              <p>{currentQuestion.recommendations.length} RECOMMENDED</p>\r\n              <button>FOLLOW</button>\r\n            </div>\r\n          </div>\r\n          <div className={styles.AskPage__contentRecommendations}>\r\n            {renderRecommendations()}\r\n          </div>\r\n        </div>\r\n        <ProductSidebar currentQuestion={currentQuestion} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AskPage;\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Discussions\\Discussions.jsx",["209","210"],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Jobs\\Jobs.jsx",["211","212"],"import React from \"react\";\r\nimport Styles from \"./Jobs.module.css\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { getjobs,getremote,geteng, getdesign,getcustomer,getproduct,getsales,getmarketing } from \"../../Redux/jobs/action\";\r\nconst Jobs = () => {\r\n  const { jobs } = useSelector((state) => state.jobsreducer, shallowEqual);\r\n  const isLoading = useSelector((state) => state.jobsreducer);\r\n  const isError = useSelector((state) => state.jobsreducer);\r\n  const [rem,setRem]=React.useState(false)\r\n  const [eng,setEng]=React.useState(false)\r\n  const [design,setDesign]=React.useState(false)\r\n  const [marketing,setMarketing]=React.useState(false)\r\n  const [sales,setSales]=React.useState(false)\r\n  const [customer,setCustomer]=React.useState(false)\r\n  const [product,setProduct]=React.useState(false)\r\n  const dispatch = useDispatch();\r\n  \r\n \r\n  React.useEffect(() => {\r\n    dispatch(getjobs());\r\n   \r\n  }, [dispatch]);\r\n\r\nconst handleremote=()=>{\r\n    setRem(prev=>!prev)\r\n    // dispatch(getdesign({rem,eng,design,marketing,sales,customer,product}))\r\n      dispatch(getremote({rem}))\r\n}\r\n\r\nconst handleeng = ()=>{\r\n    setEng(prev=>!prev)\r\n      dispatch(geteng({eng,rem}))\r\n    //  dispatch(getdesign({rem,eng,design,marketing,sales,customer,product}))\r\n}\r\n\r\nconst handledesign = ()=>{\r\n    setDesign(prev=>!prev)\r\n     dispatch(getdesign({design,rem}))\r\n}\r\n\r\nconst handlemarketing=()=>{\r\n  setMarketing(prev=>!prev)\r\n  dispatch(getmarketing({marketing,rem}))\r\n}\r\nconst handlesales=()=>{\r\n  setSales(prev=>!prev)\r\n  dispatch(getsales({sales,rem}))\r\n}\r\nconst handlecustomer=()=>{\r\n  setCustomer(prev=>!prev)\r\n  dispatch(getcustomer({customer,rem}))\r\n}\r\nconst handleproduct=()=>{\r\n  setProduct(prev=>!prev)\r\n  dispatch(getproduct({product,rem}))\r\n}\r\nconsole.log(rem,eng,design,marketing,sales,customer,product)\r\n  console.log(jobs);\r\n  return (\r\n    <>\r\n      <div className={Styles.Jobs_outerbox}>\r\n        <div className={Styles.Jobs_first_outerbox}>\r\n          {jobs?.map((item) => {\r\n            return item!==null && (\r\n              <>\r\n                <div className={Styles.Jobs_firstbox}>\r\n                  <div classname={Styles.Jobs_firstbox1}>\r\n                    <img src={item.avatar} alt=\"img\" />\r\n                  </div>\r\n                  <div\r\n                    classname={Styles.Jobs_firstbox2}\r\n                    style={{ marginLeft: \"20px\", width: \"45%\" }}\r\n                  >\r\n                    <h2 style={{ marginBottom: \"10px\" }}>{item.title}</h2>\r\n\r\n                    <h4 style={{ marginBottom: \"10px\" }}>{item.role}</h4>\r\n\r\n                    <p>{item.location}</p>\r\n                  </div>\r\n                  <div style={{ width: \"40%\" }}>\r\n                    <div style={{ textAlign: \"right\" }}>{item.pics}</div>\r\n                    <div\r\n                      style={{\r\n                        marginLeft: \"40%\",\r\n                        marginTop: \"30%\",\r\n                        display: \"flex\",\r\n                      }}\r\n                    >\r\n                      <button id={Styles.Jobs_buttondesign}>SHARE</button>\r\n                      <button id={Styles.Jobs_buttondesign}>APPLY</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <br />\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className={Styles.Jobs_secondbox} id={Styles.Jobs_secondbox}>\r\n          <div className={Styles}>\r\n            <div className={Styles.Jobs_catbox}>\r\n              <div className={Styles.Jobs_catbox1}>\r\n                <img\r\n                  src=\"https://ph-static.imgix.net/kitty_ph.png?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=80&h=80&fit=max&dpr=2\"\r\n                  alt=\"cat img\"\r\n                />\r\n              </div>\r\n              <div className={Styles.Jobs_catbox2}>\r\n                <h4>Are you hiring?</h4>\r\n\r\n                <h5>Advertise from $299</h5>\r\n\r\n                <button className={Styles.jobbutton}>POST A JOB</button>\r\n              </div>\r\n            </div>\r\n            <h3 className={Styles.Jobs_filterbox}>Filters</h3>\r\n            <div className={Styles.Jobs_checkbox}>\r\n              <label>\r\n                <input className={Styles.Jobs_input} type=\"checkbox\" onChange={handleeng}/>\r\n                ⚒️ Engineering\r\n              </label>\r\n              <br />\r\n              <label>\r\n                <input className={Styles.Jobs_input} type=\"checkbox\" onChange={handledesign} />\r\n                🎨 Design\r\n              </label>\r\n              <br />\r\n              <label>\r\n                <input className={Styles.Jobs_input} type=\"checkbox\" onChange={handlemarketing}/>\r\n                📢 Marketing\r\n              </label>\r\n              <br />\r\n              <label>\r\n                <input className={Styles.Jobs_input} type=\"checkbox\" onChange={handlesales}/>\r\n                📈 Sales\r\n              </label>\r\n              <br />\r\n              <label>\r\n                <input className={Styles.Jobs_input} type=\"checkbox\" onChange={handlecustomer}/>\r\n                💖 Customer Support\r\n              </label>\r\n              <br />\r\n              <label>\r\n                <input className={Styles.Jobs_input} type=\"checkbox\" onChange={handleproduct} />\r\n                💎 Product\r\n              </label>\r\n              <br />\r\n            </div>\r\n            <div className={Styles.Jobs_location}>\r\n              <h4\r\n                className={Styles.Jobs_filterbox}\r\n                style={{ marginLeft: \"4%\" }}\r\n              >\r\n                Location\r\n              </h4>\r\n              <select\r\n                className={Styles.Jobs_select}\r\n                placeholder=\"SELECT A LOCATION\"\r\n              >\r\n                <option>Copenhagen</option>\r\n                <option>Remote</option>\r\n                <option>San Francisco</option>\r\n                <option>Boulder,CO,USA</option>\r\n                <option>Oakland</option>\r\n              </select>\r\n              <div className={Styles.Jobs_checkbox}>\r\n                <label>\r\n                  <input className={Styles.Jobs_input} type=\"checkbox\"  onChange={handleremote}/>\r\n                  🌎 Remote jobs only\r\n                </label>\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Jobs };\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Auth\\AuthModal.jsx",["213","214","215"],"import React from \"react\";\r\nimport styles from \"./AuthModal.module.css\";\r\nimport Modal from \"react-modal\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { loginSuccess, loginFailure } from \"../../Redux/auth/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addUser } from \"../../Redux/auth/actions\";\r\nimport { AuthContext } from \"../../AuthContextProvider\";\r\nconst AuthModal = () => {\r\n  let isLoggedIn = useSelector((state) => state.authReducer.isLoggedIn);\r\n  let currentUser = useSelector((state) => state.authReducer.currentUser);\r\n   const { isOpen, setIsOpen } = React.useContext(AuthContext);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onRequestClose={() => {\r\n          setIsOpen(false);\r\n        }}\r\n        className={styles.Navbar__modal}\r\n        overlayClassName={styles.Navbar___ModalOverlay}\r\n      >\r\n        <img\r\n          src=\"https://ph-static.imgix.net/category-tech/kitty.png?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=100&h=92&fit=max\"\r\n          alt=\"not found\"\r\n        />\r\n        <h2>Sign up on Product Hunt</h2>\r\n        <p>\r\n          Join our community of friendly folks discovering and sharing the\r\n          latest products in tech.\r\n        </p>\r\n        <div className={styles.Navbar__modalButtons}>\r\n          <button style={{ backgroundColor: \"#00ACED\", color: \"white\" }}>\r\n            <i className=\"fa fa-twitter\"></i>\r\n            LOG IN WITH TWITTER\r\n          </button>\r\n          <button style={{ backgroundColor: \"#3B5998\", color: \"white\" }}>\r\n            <i className=\"fa fa-facebook\"></i>\r\n            LOG IN WITH FACEBOOK\r\n          </button>\r\n          <GoogleLogin\r\n            clientId=\"411977787315-mrdcahuab81r8iba5l4hms9d6jd40vii.apps.googleusercontent.com\"\r\n            buttonText=\"Login Google\"\r\n            onSuccess={(response) => {\r\n              dispatch(loginSuccess(response));\r\n              dispatch(addUser(response.profileObj));\r\n              setIsOpen(false);\r\n            }}\r\n            onFailure={(response) => dispatch(loginFailure(response))}\r\n            cookiePolicy={\"single_host_origin\"}\r\n          >\r\n            LOG IN WITH GOOGLE\r\n          </GoogleLogin>\r\n          <button style={{ backgroundColor: \"#333333\", color: \"white\" }}>\r\n            <i className=\"fa fa-angellist\"></i>\r\n            LOG IN WITH ANGELLIST\r\n          </button>\r\n        </div>\r\n        <p>We'll never post to any of your accounts without your permission.</p>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthModal;\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\products\\actions.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\operations\\actions.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\jobs\\action.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Product\\SideCard.jsx",["216"],"import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styles from './Product.module.css'\r\n\r\nfunction SideCard(props) {\r\n    const { name , tagline , image, logo , id } = props\r\n    const history = useHistory()\r\n    \r\n    const modalRedirectHandler = (id) => {\r\n        history.push(`/product/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div onClick={()=>modalRedirectHandler(id)} className={styles.SideCard}>\r\n            <div className={styles.SideCard__content}>\r\n                <h2>{name}</h2>\r\n                <p>{tagline}</p>\r\n                <div className={styles.SideCard__content__follow} >\r\n                    {/* <div>\r\n                        <i className=\"fas fa-plus\"></i>\r\n                    </div> */}\r\n                    {/* <div>   \r\n                        <span> FOLLOW (0)</span> \r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n            <div className={styles.SideCard__img}>\r\n                <img src={logo} alt=\"product-img\"></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideCard\r\n\r\n\r\n ","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\AskHeader.jsx",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Product\\ProductCard.jsx",["217","218","219"],"import React from \"react\";\r\nimport styles from \"./Product.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  getAllUsersAuthData,\r\n  findCurrentUserUpvotes,\r\n  updateUpvotes,\r\n  upVoteCounter,\r\n} from \"../../Redux/operations/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AuthContext } from \"../../AuthContextProvider\";\r\n\r\nfunction ProductCard(props) {\r\n  const {\r\n    dataHandlers,\r\n    logo,\r\n    name,\r\n    category,\r\n    upvotes,\r\n    comments,\r\n    tagline,\r\n    id,\r\n  } = props;\r\n  const [trigger, setTrigger] = React.useState(false);\r\n  const {\r\n    getTodayProducts,\r\n    getBestDealsHandler,\r\n    getOlderProductsHandler,\r\n    getUpcomingProductsHandler,\r\n  } = dataHandlers;\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector((state) => state.authReducer.currentUser);\r\n  const upvoted = useSelector((state) => state.operationsReducer.upvotes);\r\n  const isLoggedIn = useSelector((state) => state.authReducer.isLoggedIn);\r\n\r\n  const { isOpen, setIsOpen } = React.useContext(AuthContext);\r\n\r\n  const modalToggleHandler = (id) => {\r\n    history.push(`/product/${id}`);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isLoggedIn) {\r\n      dispatch(findCurrentUserUpvotes(currentUser.email));\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const productUpvoteHandler = () => {\r\n    if (!isLoggedIn) {\r\n      setIsOpen(true);\r\n      return;\r\n    }\r\n    dispatch(\r\n      getAllUsersAuthData({\r\n        email: currentUser.email,\r\n      })\r\n    ).then((res) => {\r\n      if (res.data === undefined) {\r\n        const upvoted = [];\r\n        upvoted.push(id);\r\n        dispatch(updateUpvotes(upvoted, res.id, currentUser.email))\r\n          .then((res) => dispatch(findCurrentUserUpvotes(currentUser.email)))\r\n          .then((res) =>\r\n            dispatch(upVoteCounter({ upvotes: upvotes + 1 }, id)).then((res) =>\r\n              setTrigger(!trigger)\r\n            )\r\n          );\r\n      } else {\r\n        const findExistence = res.data.find((item) => item === id);\r\n        if (findExistence === undefined) {\r\n          const updatedUpVotes = [...res.data, id];\r\n          dispatch(updateUpvotes(updatedUpVotes, res.id, currentUser.email))\r\n            .then((res) => dispatch(findCurrentUserUpvotes(currentUser.email)))\r\n            .then((res) =>\r\n              dispatch(\r\n                upVoteCounter({ upvotes: upvotes + 1 }, id)\r\n              ).then((res) => setTrigger(!trigger))\r\n            );\r\n        } else {\r\n          const updatedUpVotes = res.data.filter((item) => item !== id);\r\n          dispatch(updateUpvotes(updatedUpVotes, res.id, currentUser.email))\r\n            .then((res) => dispatch(findCurrentUserUpvotes(currentUser.email)))\r\n            .then((res) =>\r\n              dispatch(\r\n                upVoteCounter({ upvotes: upvotes - 1 }, id)\r\n              ).then((res) => setTrigger(!trigger))\r\n            );\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getTodayProducts(\"popular\");\r\n    getBestDealsHandler();\r\n    getOlderProductsHandler();\r\n    getUpcomingProductsHandler();\r\n  }, [trigger]);\r\n\r\n  return (\r\n    <div className={styles.ProductCard}>\r\n      <div className={styles.ProductCard__img}>\r\n        <img src={logo} alt=\"product-img\"></img>\r\n      </div>\r\n      <div\r\n        onClick={() => modalToggleHandler(id)}\r\n        className={styles.ProductCard__content}\r\n      >\r\n        <h2>\r\n          {name}{\" \"}\r\n          <span>\r\n            <i className=\"fas fa-directions\"></i>\r\n          </span>\r\n        </h2>\r\n        <p>{tagline}</p>\r\n        <div className={styles.ProductCard__content__footer}>\r\n          <div>\r\n            <i className=\"fas fa-comment\"></i>\r\n            <span>{comments}</span>\r\n          </div>\r\n          <div>\r\n            <span>{category}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={() => productUpvoteHandler()}\r\n        className={\r\n          upvoted?.find((item) => item === id) !== undefined && isLoggedIn\r\n            ? styles.ProductCard__upvote__clicked\r\n            : styles.ProductCard__upvote\r\n        }\r\n      >\r\n        <div>\r\n          <i className=\"fas fa-caret-up\"></i>\r\n        </div>\r\n        <div>\r\n          <p>{upvotes}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Product\\CommentsSection.jsx",["220","221","222","223","224"],"import React, { createElement } from 'react';\r\nimport { Comment , Tooltip , Avatar } from 'antd'\r\nimport {  CaretUpFilled, CaretUpOutlined } from '@ant-design/icons';\r\nimport styles from './CommentsSection.module.css'\r\nimport 'antd/dist/antd.css'\r\n\r\nfunction CommentsSection(props) {\r\n    const { commentID , userImage , userName , userComment , commentUpvotes } = props \r\n\r\n    \r\n  \r\n    const actions = [\r\n      // <CaretUpFilled />,\r\n      // <CaretUpOutlined/>    \r\n    ];\r\n  \r\n    return (\r\n      <Comment\r\n        key={commentID}\r\n        className={styles.CommentsSection}\r\n        actions={actions}\r\n        author={userName}\r\n        children={<Comment\r\n            className={styles.CommentsSection}\r\n            actions={actions}\r\n            author={\"Han Solo\"}\r\n            avatar={\r\n                <Avatar\r\n                  src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                  alt=\"Han Solo\"\r\n                />\r\n              }\r\n            content={\r\n                <p>\r\n                  {userComment}\r\n                </p>\r\n              }\r\n            />\r\n            }\r\n        avatar={\r\n          <Avatar\r\n            src={userImage}\r\n            alt=\"Han Solo\"\r\n          />\r\n        }\r\n        \r\n        content={\r\n          <p>\r\n           {userComment}\r\n          </p>\r\n        }\r\n      />\r\n    );\r\n}\r\n\r\nexport default CommentsSection\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\RightSidebar.jsx",["225","226","227","228"],"import React from \"react\";\r\nimport styles from \"./RightSidebar.module.css\";\r\n\r\nconst RightSidebar = () => {\r\n  return (\r\n    <div className={styles.RightSidebar}>\r\n      <div className={styles.RightSidebar__activityList}>\r\n        <p>YOUR ACTIVITY</p>\r\n        <ul>\r\n          <li>\r\n            <span>🤔</span>0 questions asked\r\n          </li>\r\n          <li>\r\n            <span>✍️</span>1 recommended\r\n          </li>\r\n          <li>\r\n            <span>👀</span>0 followed questions\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div className={styles.RightSidebar__helpfulList}>\r\n        <p>MOST HELPFUL THIS WEEK</p>\r\n        <ul>\r\n          <li>\r\n            <img\r\n              src=\"https://ph-avatars.imgix.net/844341/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=32&h=32&fit=crop\"\r\n              alt=\"image\"\r\n            />\r\n            <div>\r\n              <h4>Jason Grills</h4>\r\n              <p>Customer & Product Growth Manager</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <img\r\n              src=\"https://ph-avatars.imgix.net/844341/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=32&h=32&fit=crop\"\r\n              alt=\"image\"\r\n            />\r\n            <div>\r\n              <h4>Jason Grills</h4>\r\n              <p>Customer & Product Growth Manager</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <img\r\n              src=\"https://ph-avatars.imgix.net/844341/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=32&h=32&fit=crop\"\r\n              alt=\"image\"\r\n            />\r\n            <div>\r\n              <h4>Jason Grills</h4>\r\n              <p>Customer & Product Growth Manager</p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <img\r\n              src=\"https://ph-avatars.imgix.net/844341/original?auto=format&auto=compress&codec=mozjpeg&cs=strip&w=32&h=32&fit=crop\"\r\n              alt=\"image\"\r\n            />\r\n            <div>\r\n              <h4>Jason Grills</h4>\r\n              <p>Customer & Product Growth Manager</p>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightSidebar;\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\LeftSidebar.jsx",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\Content.jsx",["229"],"import React from \"react\";\r\nimport styles from \"./Content.module.css\";\r\nimport QuestionCard from \"./QuestionCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAskQuestions } from \"../../Redux/ask/actions\";\r\nconst Content = () => {\r\n  const dispatch = useDispatch();\r\n  const askQuestions = useSelector((state) => state.askReducer.askQuestions);\r\n  console.log(\"ask questions:\", askQuestions);\r\n  React.useEffect(() => {\r\n    dispatch(getAskQuestions());\r\n  }, []);\r\n\r\n  const renderQuestions = () => {\r\n    if (askQuestions.length === 0) return;\r\n    return askQuestions.map((question) => (\r\n      <QuestionCard key={question.id} {...question} />\r\n    ));\r\n  };\r\n  return (\r\n    <div className={styles.Content}>\r\n      {renderQuestions()}\r\n      {/* <QuestionCard />\r\n      <QuestionCard />\r\n      <QuestionCard />\r\n      <QuestionCard />\r\n      <QuestionCard />\r\n      <QuestionCard />\r\n      <QuestionCard />\r\n      <QuestionCard /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\ProductSidebar.jsx",["230","231","232"],"import React from \"react\";\r\nimport styles from \"./ProductSidebar.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateRecommendation } from \"../../Redux/ask/actions\";\r\nimport { AuthContext } from \"../../AuthContextProvider\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst ProductSidebar = ({ currentQuestion }) => {\r\n  const [query, setQuery] = React.useState(\"\");\r\n  const [filteredProducts, setFilteredProducts] = React.useState([]);\r\n  const allProducts = useSelector((state) => state.productsReducer.productData);\r\n  const currentUser = useSelector((state) => state.authReducer.currentUser);\r\n  const isLoggedIn = useSelector((state) => state.authReducer.isLoggedIn);\r\n  \r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    setFilteredProducts(allProducts);\r\n  }, []);\r\n\r\n  const handleQueryChange = (e) => {\r\n    let myQuery = e.target.value;\r\n    setQuery(myQuery);\r\n    if (myQuery === '') {\r\n      let newFilteredProducts = allProducts;\r\n      setFilteredProducts(allProducts);\r\n    } else {\r\n      let newFilteredProducts = allProducts.filter((product) =>\r\n        product.name.toLowerCase().includes(myQuery.toLowerCase())\r\n      );\r\n      setFilteredProducts(newFilteredProducts);\r\n    }\r\n  };\r\n  const { isOpen, setIsOpen } = React.useContext(AuthContext);\r\n  // dispatch an action to change the recommendation array of a particular askedQuestion\r\n  const handleRecommendClick = (product) => {\r\n    if (!isLoggedIn) {\r\n      setIsOpen(true);\r\n      return;\r\n    }\r\n    const updatedRecommendations = [\r\n      ...currentQuestion.recommendations,\r\n      { id: uuid(), productId: product.id, ...currentUser },\r\n    ];\r\n    // dispatch this updated property to api\r\n    dispatch(updateRecommendation(currentQuestion.id, updatedRecommendations));\r\n  };\r\n  const renderProducts = () => {\r\n    if (filteredProducts.length === 0) return;\r\n    return filteredProducts.map((product) => {\r\n      return (\r\n        <div key={product.id} className={styles.ProductSidebar__productItem}>\r\n          <img src={product.logo} alt=\"logo\" />\r\n          <div>\r\n            <h4>{product.name}</h4>\r\n            <p>{product.tagline}</p>\r\n          </div>\r\n          <div className={styles.ProductSidebar__productItem__button}>\r\n            <button onClick={() => handleRecommendClick(product)}>\r\n              RECOMMEND\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {}, [query]);\r\n\r\n  return (\r\n    <div className={styles.ProductSidebar}>\r\n      <div className={styles.ProductSidebar__search}>\r\n        <h3>Search Products to Recommend:</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={handleQueryChange}\r\n          placeholder=\"Search Products Here..\"\r\n        />\r\n      </div>\r\n      <ul>{renderProducts()}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductSidebar;\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\Recommendation.jsx",["233","234"],"import React from \"react\";\r\nimport styles from \"./Recommendation.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst Recommendation = ({ id, productId, name, imageUrl }) => {\r\n  const allProducts = useSelector((state) => state.productsReducer.productData);\r\n\r\n  const currentProduct = allProducts.filter(\r\n    (product) => product.id == productId\r\n  )[0];\r\n  console.log(\"current product\", currentProduct);\r\n  const renderCurrentProduct = () => {\r\n    if (!currentProduct) {\r\n      return (\r\n        <div className={styles.Recommendation}>\r\n          <h4>Loading Product...</h4>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className={styles.Recommendation}>\r\n        <div className={styles.Recommendation__product}>\r\n          <img src={currentProduct.logo} alt=\"logo\" />\r\n          <div>\r\n            <h2>{currentProduct.name}</h2>\r\n            <p>{currentProduct.tagline}</p>\r\n            <div>\r\n              <img src={imageUrl} alt=\"user\" />\r\n              <h3>{name}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return <>{renderCurrentProduct()}</>;\r\n};\r\nexport default Recommendation;\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\ask\\actions.js",["235"],"import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\n// get all askedquestions\r\nconst getAskQuestionsRequest = () => {\r\n  return {\r\n    type: actionTypes.GET_ASK_QUESTIONS_REQUEST,\r\n  };\r\n};\r\n\r\nconst getAskQuestionsSuccess = (askQuestions) => {\r\n  return {\r\n    type: actionTypes.GET_ASK_QUESTIONS_SUCCESS,\r\n    payload: askQuestions,\r\n  };\r\n};\r\n\r\nconst getAskQuestionsFailure = () => {\r\n  return {\r\n    type: actionTypes.GET_ASK_QUESTIONS_FAILURE,\r\n  };\r\n};\r\n\r\nconst getAskQuestions = () => {\r\n  return async (dispatch) => {\r\n    dispatch(getAskQuestionsRequest());\r\n    try {\r\n      const resQues = await axios.get(\r\n        \"https://json-server-nitansh-1.herokuapp.com/askedQuestions\"\r\n      );\r\n      const resUsers = await axios.get(\r\n        \"https://json-server-nitansh-1.herokuapp.com/users\"\r\n      );\r\n      let questions = resQues.data;\r\n      const users = resUsers.data;\r\n\r\n      const allQuestions = questions.map((question) => {\r\n        let user = users.filter((user) => user.email === question.email)[0];\r\n        question.name = user.name;\r\n        question.about = user.about;\r\n        question.imageUrl = user.imageUrl;\r\n        return question;\r\n      });\r\n      dispatch(getAskQuestionsSuccess(allQuestions));\r\n    } catch (err) {\r\n      console.log(\"inside get ask questions error\", err);\r\n      dispatch(getAskQuestionsFailure());\r\n    }\r\n  };\r\n};\r\n\r\n// update recommendation array of a particular product\r\n\r\nconst updateRecommendationRequest = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_RECOMMENDATION_REQUEST,\r\n  };\r\n};\r\n\r\nconst updateRecommendationSuccess = (askQuestions) => {\r\n  return {\r\n    type: actionTypes.UPDATE_RECOMMENDATION_SUCCESS,\r\n    payload: askQuestions,\r\n  };\r\n};\r\nconst updateRecommendationFailure = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_RECOMMENDATION_FAILURE,\r\n  };\r\n};\r\n\r\nconst updateRecommendation = (id, updatedRecommendations) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateRecommendationRequest());\r\n    try {\r\n      const response = await axios.patch(\r\n        `https://json-server-nitansh-1.herokuapp.com/askedQuestions/${id}`,\r\n        { recommendations: updatedRecommendations }\r\n      );\r\n   \r\n      dispatch(getAskQuestions());\r\n      dispatch(updateRecommendationSuccess());\r\n    } catch (err) {\r\n      console.log(\"inside update recommendation error\", err);\r\n      dispatch(updateRecommendationFailure());\r\n    }\r\n  };\r\n};\r\n\r\nexport { getAskQuestions, updateRecommendation };\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Ask\\QuestionCard.jsx",["236"],"import React from \"react\";\r\nimport styles from \"./QuestionCard.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst QuestionCard = ({\r\n  id,\r\n  about,\r\n  title,\r\n  description,\r\n  imageUrl,\r\n  name,\r\n  recommendations,\r\n}) => {\r\n  const history = useHistory();\r\n  const handleClick = () => {\r\n    history.push(`/ask/${id}`);\r\n  };\r\n  return (\r\n    <div className={styles.QuestionCard}>\r\n      <div className={styles.QuestionCard__header}>\r\n        <img src={imageUrl} alt=\"image\" />\r\n        <h4>{name}</h4>\r\n        <p>{about}</p>\r\n      </div>\r\n      <h3 onClick={handleClick}>{title}</h3>\r\n      <p>{description}</p>\r\n      <div className={styles.QuestionCard__footer}>\r\n        <p>{recommendations.length} RECOMMENDED</p>\r\n        <button>FOLLOW</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n","C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Discussions\\PatchComment.jsx",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\discussions\\actions.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\discussions\\actionTypes.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Redux\\discussions\\discussiosReducer.js",[],"C:\\Users\\HP\\masai\\u3_apache\\product-hunt\\src\\Components\\Discussions\\Comments.jsx",[],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":30,"column":7,"nodeType":"243","messageId":"244","endLine":30,"endColumn":18},{"ruleId":"241","severity":1,"message":"245","line":6,"column":19,"nodeType":"243","messageId":"244","endLine":6,"endColumn":29},{"ruleId":"246","severity":1,"message":"247","line":45,"column":7,"nodeType":"248","endLine":45,"endColumn":19,"suggestions":"249"},{"ruleId":"246","severity":1,"message":"250","line":65,"column":7,"nodeType":"248","endLine":65,"endColumn":20,"suggestions":"251"},{"ruleId":"246","severity":1,"message":"252","line":90,"column":7,"nodeType":"248","endLine":90,"endColumn":9,"suggestions":"253"},{"ruleId":"241","severity":1,"message":"254","line":5,"column":23,"nodeType":"243","messageId":"244","endLine":5,"endColumn":34},{"ruleId":"255","severity":1,"message":"256","line":11,"column":31,"nodeType":"257","messageId":"258","endLine":11,"endColumn":33},{"ruleId":"259","severity":1,"message":"260","line":30,"column":15,"nodeType":"261","endLine":30,"endColumn":65},{"ruleId":"241","severity":1,"message":"262","line":6,"column":10,"nodeType":"243","messageId":"244","endLine":6,"endColumn":22},{"ruleId":"263","severity":1,"message":"264","line":35,"column":9,"nodeType":"243","messageId":"265","endLine":35,"endColumn":17},{"ruleId":"241","severity":1,"message":"266","line":7,"column":9,"nodeType":"243","messageId":"244","endLine":7,"endColumn":18},{"ruleId":"241","severity":1,"message":"267","line":8,"column":9,"nodeType":"243","messageId":"244","endLine":8,"endColumn":16},{"ruleId":"241","severity":1,"message":"268","line":11,"column":7,"nodeType":"243","messageId":"244","endLine":11,"endColumn":17},{"ruleId":"241","severity":1,"message":"242","line":12,"column":7,"nodeType":"243","messageId":"244","endLine":12,"endColumn":18},{"ruleId":"241","severity":1,"message":"269","line":14,"column":9,"nodeType":"243","messageId":"244","endLine":14,"endColumn":16},{"ruleId":"241","severity":1,"message":"270","line":6,"column":30,"nodeType":"243","messageId":"244","endLine":6,"endColumn":35},{"ruleId":"241","severity":1,"message":"271","line":37,"column":11,"nodeType":"243","messageId":"244","endLine":37,"endColumn":17},{"ruleId":"246","severity":1,"message":"250","line":47,"column":6,"nodeType":"248","endLine":47,"endColumn":19,"suggestions":"272"},{"ruleId":"246","severity":1,"message":"252","line":99,"column":6,"nodeType":"248","endLine":99,"endColumn":15,"suggestions":"273"},{"ruleId":"241","severity":1,"message":"274","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":30},{"ruleId":"241","severity":1,"message":"275","line":2,"column":20,"nodeType":"243","messageId":"244","endLine":2,"endColumn":27},{"ruleId":"241","severity":1,"message":"276","line":3,"column":11,"nodeType":"243","messageId":"244","endLine":3,"endColumn":24},{"ruleId":"241","severity":1,"message":"277","line":3,"column":26,"nodeType":"243","messageId":"244","endLine":3,"endColumn":41},{"ruleId":"241","severity":1,"message":"278","line":8,"column":62,"nodeType":"243","messageId":"244","endLine":8,"endColumn":76},{"ruleId":"259","severity":1,"message":"260","line":26,"column":13,"nodeType":"261","endLine":29,"endColumn":15},{"ruleId":"259","severity":1,"message":"260","line":36,"column":13,"nodeType":"261","endLine":39,"endColumn":15},{"ruleId":"259","severity":1,"message":"260","line":46,"column":13,"nodeType":"261","endLine":49,"endColumn":15},{"ruleId":"259","severity":1,"message":"260","line":56,"column":13,"nodeType":"261","endLine":59,"endColumn":15},{"ruleId":"246","severity":1,"message":"279","line":12,"column":6,"nodeType":"248","endLine":12,"endColumn":8,"suggestions":"280"},{"ruleId":"246","severity":1,"message":"281","line":17,"column":6,"nodeType":"248","endLine":17,"endColumn":8,"suggestions":"282"},{"ruleId":"241","severity":1,"message":"283","line":23,"column":11,"nodeType":"243","messageId":"244","endLine":23,"endColumn":30},{"ruleId":"241","severity":1,"message":"271","line":32,"column":11,"nodeType":"243","messageId":"244","endLine":32,"endColumn":17},{"ruleId":"241","severity":1,"message":"254","line":3,"column":23,"nodeType":"243","messageId":"244","endLine":3,"endColumn":34},{"ruleId":"255","severity":1,"message":"256","line":8,"column":29,"nodeType":"257","messageId":"258","endLine":8,"endColumn":31},{"ruleId":"241","severity":1,"message":"284","line":76,"column":13,"nodeType":"243","messageId":"244","endLine":76,"endColumn":21},{"ruleId":"259","severity":1,"message":"260","line":20,"column":9,"nodeType":"261","endLine":20,"endColumn":43},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","'setProduct' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getSoloDataHandler'. Either include it or remove the dependency array.","ArrayExpression",["287"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'isLoggedIn'. Either include them or remove the dependency array.",["288"],"React Hook React.useEffect has missing dependencies: 'getBestDealsHandler', 'getOlderProductsHandler', 'getTodayProducts', and 'getUpcomingProductsHandler'. Either include them or remove the dependency array.",["289"],"'useDispatch' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'PatchComment' is defined but never used.","no-const-assign","'comments' is constant.","const","'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'history' is assigned a value but never used.","'image' is assigned a value but never used.","'isOpen' is assigned a value but never used.",["290"],["291"],"'createElement' is defined but never used.","'Tooltip' is defined but never used.","'CaretUpFilled' is defined but never used.","'CaretUpOutlined' is defined but never used.","'commentUpvotes' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["292"],"React Hook React.useEffect has a missing dependency: 'allProducts'. Either include it or remove the dependency array.",["293"],"'newFilteredProducts' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"296","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},"Update the dependencies array to be: [getSoloDataHandler, id, trigger]",{"range":"307","text":"308"},"Update the dependencies array to be: [currentUser, dispatch, isLoggedIn]",{"range":"309","text":"310"},"Update the dependencies array to be: [getBestDealsHandler, getOlderProductsHandler, getTodayProducts, getUpcomingProductsHandler]",{"range":"311","text":"312"},{"range":"313","text":"310"},"Update the dependencies array to be: [getBestDealsHandler, getOlderProductsHandler, getTodayProducts, getUpcomingProductsHandler, trigger]",{"range":"314","text":"315"},"Update the dependencies array to be: [dispatch]",{"range":"316","text":"317"},"Update the dependencies array to be: [allProducts]",{"range":"318","text":"319"},[1877,1889],"[getSoloDataHandler, id, trigger]",[2367,2380],"[currentUser, dispatch, isLoggedIn]",[2691,2693],"[getBestDealsHandler, getOlderProductsHandler, getTodayProducts, getUpcomingProductsHandler]",[1313,1326],[3123,3132],"[getBestDealsHandler, getOlderProductsHandler, getTodayProducts, getUpcomingProductsHandler, trigger]",[486,488],"[dispatch]",[812,814],"[allProducts]"]